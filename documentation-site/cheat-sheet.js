const outlines = [
  {
    file: 'src/a11y/types.ts',
    definitions: [
      {
        name: 'ViolationProps',
        lineStart: 9,
        children: [
          { name: 'target', lineStart: 10 },
          { name: 'violations', lineStart: 11 },
        ],
      },
    ],
  },
  {
    file: 'src/accordion/types.ts',
    definitions: [
      { name: 'AccordionState', lineStart: 12, children: [{ name: 'expanded', lineStart: 13 }] },
      { name: 'PanelState', lineStart: 16, children: [{ name: 'expanded', lineStart: 17 }] },
      { name: 'StateChangeType', lineStart: 20, children: [] },
      { name: 'StateReducer', lineStart: 22, children: [] },
      { name: 'PanelStateReducer', lineStart: 28, children: [] },
      {
        name: 'AccordionOverrides',
        lineStart: 34,
        children: [
          { name: 'Content', lineStart: 35 },
          { name: 'ContentAnimationContainer', lineStart: 36 },
          { name: 'Header', lineStart: 37 },
          { name: 'PanelContainer', lineStart: 38 },
          { name: 'Root', lineStart: 39 },
          { name: 'ToggleIcon', lineStart: 40 },
          { name: 'ToggleIconGroup', lineStart: 41 },
        ],
      },
      {
        name: 'PanelOverrides',
        lineStart: 44,
        children: [
          { name: 'PanelContainer', lineStart: 45 },
          { name: 'Header', lineStart: 46 },
          { name: 'ToggleIcon', lineStart: 47 },
          { name: 'ToggleIconGroup', lineStart: 48 },
          { name: 'Content', lineStart: 49 },
          { name: 'ContentAnimationContainer', lineStart: 50 },
        ],
      },
      { name: 'OnChangeHandler', lineStart: 53, children: [] },
      { name: 'AccordionOnChangeHandler', lineStart: 55, children: [] },
      {
        name: 'AccordionProps',
        lineStart: 57,
        children: [
          { name: 'accordion', lineStart: 61 },
          { name: 'children', lineStart: 63 },
          { name: 'disabled', lineStart: 65 },
          { name: 'initialState', lineStart: 66 },
          { name: 'onChange', lineStart: 69 },
          { name: 'overrides', lineStart: 70 },
          { name: 'stateReducer', lineStart: 73 },
          { name: 'renderAll', lineStart: 78 },
        ],
      },
      { name: 'StatelessAccordionOnChangeHandler', lineStart: 81, children: [] },
      {
        name: 'StatelessAccordionProps',
        lineStart: 86,
        children: [
          { name: 'accordion', lineStart: 90 },
          { name: 'children', lineStart: 92 },
          { name: 'disabled', lineStart: 94 },
          { name: 'expanded', lineStart: 96 },
          { name: 'onChange', lineStart: 98 },
          { name: 'overrides', lineStart: 99 },
          { name: 'renderPanelContent', lineStart: 104 },
          { name: 'renderAll', lineStart: 109 },
        ],
      },
      { name: 'PanelProps', lineStart: 145, children: [] },
      { name: 'StatefulPanelContainerProps', lineStart: 160, children: [] },
      { name: 'StatefulPanelProps', lineStart: 165, children: [] },
      {
        name: 'SharedStylePropsArg',
        lineStart: 167,
        children: [
          { name: '$color', lineStart: 168 },
          { name: '$disabled', lineStart: 169 },
          { name: '$expanded', lineStart: 170 },
          { name: '$size', lineStart: 171 },
          { name: '$isFocusVisible', lineStart: 172 },
        ],
      },
    ],
  },
  {
    file: 'src/app-nav-bar/types.ts',
    definitions: [
      {
        name: 'AppNavBarOverrides',
        lineStart: 12,
        children: [
          { name: 'Root', lineStart: 13 },
          { name: 'AppName', lineStart: 14 },
          { name: 'DesktopMenu', lineStart: 15 },
          { name: 'DesktopMenuContainer', lineStart: 16 },
          { name: 'MainMenuItem', lineStart: 17 },
          { name: 'PrimaryMenuContainer', lineStart: 18 },
          { name: 'ProfileTileContainer', lineStart: 19 },
          { name: 'SecondaryMenuContainer', lineStart: 20 },
          { name: 'Spacing', lineStart: 21 },
          { name: 'SubnavContainer', lineStart: 22 },
          { name: 'UserMenuProfileListItem', lineStart: 23 },
          { name: 'UserProfileInfoContainer', lineStart: 24 },
          { name: 'UserProfilePictureContainer', lineStart: 25 },
          { name: 'UserProfileTileContainer', lineStart: 26 },
          { name: 'MobileDrawer', lineStart: 28 },
          { name: 'MobileMenu', lineStart: 29 },
          { name: 'SideMenuButton', lineStart: 30 },
          { name: 'UserMenuButton', lineStart: 31 },
          { name: 'UserMenu', lineStart: 32 },
        ],
      },
      {
        name: 'NavItem',
        lineStart: 35,
        children: [
          { name: 'active', lineStart: 36 },
          { name: 'icon', lineStart: 38 },
          { name: 'info', lineStart: 40 },
          { name: 'label', lineStart: 41 },
          { name: 'children', lineStart: 42 },
          { name: 'navExitIcon', lineStart: 44 },
          { name: 'navPosition', lineStart: 45 },
        ],
      },
      {
        name: 'UserMenuProps',
        lineStart: 51,
        children: [
          { name: 'userItems', lineStart: 52 },
          { name: 'username', lineStart: 53 },
          { name: 'usernameSubtitle', lineStart: 54 },
          { name: 'userImgUrl', lineStart: 55 },
          { name: 'onUserItemSelect', lineStart: 56 },
        ],
      },
      { name: 'AppNavBarProps', lineStart: 59, children: [] },
    ],
  },
  {
    file: 'src/aspect-ratio-box/types.ts',
    definitions: [{ name: 'AspectRatioBoxProps', lineStart: 10, children: [] }],
  },
  {
    file: 'src/avatar/types.ts',
    definitions: [
      { name: 'InitialsStyleProps', lineStart: 9, children: [] },
      {
        name: 'AvatarStyleProps',
        lineStart: 10,
        children: [
          { name: '$didImageFailToLoad', lineStart: 11 },
          { name: '$imageLoaded', lineStart: 12 },
          { name: '$size', lineStart: 13 },
        ],
      },
      {
        name: 'RootStyleProps',
        lineStart: 15,
        children: [
          { name: '$didImageFailToLoad', lineStart: 16 },
          { name: '$size', lineStart: 17 },
        ],
      },
      { name: 'StyleProps', lineStart: 19, children: [] },
      {
        name: 'AvatarOverrides',
        lineStart: 21,
        children: [
          { name: 'Avatar', lineStart: 22 },
          { name: 'Initials', lineStart: 23 },
          { name: 'Root', lineStart: 24 },
        ],
      },
      {
        name: 'AvatarProps',
        lineStart: 27,
        children: [
          { name: 'initials', lineStart: 29 },
          { name: 'name', lineStart: 31 },
          { name: 'overrides', lineStart: 32 },
          { name: 'size', lineStart: 34 },
          { name: 'src', lineStart: 36 },
        ],
      },
    ],
  },
  {
    file: 'src/badge/types.ts',
    definitions: [
      { name: 'Hierarchy', lineStart: 11, children: [] },
      { name: 'Shape', lineStart: 12, children: [] },
      { name: 'Color', lineStart: 13, children: [] },
      { name: 'Placement', lineStart: 14, children: [] },
      { name: 'Role', lineStart: 15, children: [] },
      {
        name: 'BadgeOverrides',
        lineStart: 17,
        children: [
          { name: 'Root', lineStart: 18 },
          { name: 'Positioner', lineStart: 19 },
          { name: 'Badge', lineStart: 20 },
        ],
      },
      {
        name: 'BadgeProps',
        lineStart: 23,
        children: [
          { name: 'content', lineStart: 24 },
          { name: 'hierarchy', lineStart: 25 },
          { name: 'shape', lineStart: 26 },
          { name: 'color', lineStart: 27 },
          { name: 'placement', lineStart: 28 },
          { name: 'hidden', lineStart: 29 },
          { name: 'horizontalOffset', lineStart: 30 },
          { name: 'verticalOffset', lineStart: 31 },
          { name: 'overrides', lineStart: 32 },
          { name: 'children', lineStart: 33 },
        ],
      },
      {
        name: 'NotificationCircleProps',
        lineStart: 36,
        children: [
          { name: 'content', lineStart: 37 },
          { name: 'color', lineStart: 38 },
          { name: 'placement', lineStart: 39 },
          { name: 'hidden', lineStart: 40 },
          { name: 'horizontalOffset', lineStart: 41 },
          { name: 'verticalOffset', lineStart: 42 },
          { name: 'overrides', lineStart: 43 },
          { name: 'children', lineStart: 44 },
        ],
      },
      {
        name: 'HintDotProps',
        lineStart: 47,
        children: [
          { name: 'color', lineStart: 48 },
          { name: 'hidden', lineStart: 49 },
          { name: 'horizontalOffset', lineStart: 50 },
          { name: 'verticalOffset', lineStart: 51 },
          { name: 'overrides', lineStart: 52 },
          { name: 'children', lineStart: 53 },
        ],
      },
    ],
  },
  {
    file: 'src/banner/types.ts',
    definitions: [
      { name: 'ActionPosition', lineStart: 11, children: [] },
      { name: 'ArtworkType', lineStart: 12, children: [] },
      { name: 'Hierarchy', lineStart: 13, children: [] },
      { name: 'Kind', lineStart: 14, children: [] },
      {
        name: 'ActionContent',
        lineStart: 16,
        children: [
          { name: 'label', lineStart: 18 },
          { name: 'icon', lineStart: 20 },
          { name: 'onClick', lineStart: 22 },
          { name: 'position', lineStart: 24 },
        ],
      },
      {
        name: 'ArtworkContent',
        lineStart: 27,
        children: [
          { name: 'icon', lineStart: 29 },
          { name: 'type', lineStart: 31 },
        ],
      },
      {
        name: 'BannerOverrides',
        lineStart: 34,
        children: [
          { name: 'BelowContent', lineStart: 35 },
          { name: 'LeadingContent', lineStart: 36 },
          { name: 'Message', lineStart: 37 },
          { name: 'MessageContent', lineStart: 38 },
          { name: 'Root', lineStart: 39 },
          { name: 'Title', lineStart: 40 },
          { name: 'TrailingContent', lineStart: 41 },
          { name: 'TrailingButtonContainer', lineStart: 42 },
          { name: 'TrailingIconButton', lineStart: 43 },
        ],
      },
      {
        name: 'BannerProps',
        lineStart: 46,
        children: [
          { name: 'action', lineStart: 48 },
          { name: 'artwork', lineStart: 50 },
          { name: 'children', lineStart: 52 },
          { name: 'hierarchy', lineStart: 54 },
          { name: 'kind', lineStart: 56 },
          { name: 'overrides', lineStart: 57 },
          { name: 'nested', lineStart: 59 },
          { name: 'title', lineStart: 61 },
        ],
      },
    ],
  },
  {
    file: 'src/block/types.ts',
    definitions: [
      { name: 'BlockOverrides', lineStart: 12, children: [{ name: 'Block', lineStart: 13 }] },
      { name: 'Responsive', lineStart: 16, children: [] },
      { name: 'Scale', lineStart: 211, children: [] },
      { name: 'WhiteSpace', lineStart: 213, children: [] },
      {
        name: 'BlockProps',
        lineStart: 224,
        children: [
          { name: 'children', lineStart: 225 },
          { name: 'as', lineStart: 227 },
          { name: 'overrides', lineStart: 228 },
          { name: 'color', lineStart: 230 },
          { name: 'backgroundAttachment', lineStart: 232 },
          { name: 'backgroundClip', lineStart: 234 },
          { name: 'backgroundColor', lineStart: 236 },
          { name: 'backgroundImage', lineStart: 238 },
          { name: 'backgroundOrigin', lineStart: 240 },
          { name: 'backgroundPosition', lineStart: 242 },
          { name: 'backgroundRepeat', lineStart: 244 },
          { name: 'backgroundSize', lineStart: 246 },
          { name: 'font', lineStart: 248 },
          { name: 'alignContent', lineStart: 250 },
          { name: 'alignItems', lineStart: 252 },
          { name: 'alignSelf', lineStart: 254 },
          { name: 'flexDirection', lineStart: 256 },
          { name: 'display', lineStart: 258 },
          { name: 'flex', lineStart: 260 },
          { name: 'grid', lineStart: 262 },
          { name: 'gridArea', lineStart: 264 },
          { name: 'gridAutoColumns', lineStart: 266 },
          { name: 'gridAutoFlow', lineStart: 268 },
          { name: 'gridAutoRows', lineStart: 270 },
          { name: 'gridColumn', lineStart: 272 },
          { name: 'gridColumnEnd', lineStart: 274 },
          { name: 'gridColumnGap', lineStart: 276 },
          { name: 'gridColumnStart', lineStart: 278 },
          { name: 'gridGap', lineStart: 280 },
          { name: 'gridRow', lineStart: 282 },
          { name: 'gridRowEnd', lineStart: 284 },
          { name: 'gridRowGap', lineStart: 286 },
          { name: 'gridRowStart', lineStart: 288 },
          { name: 'gridTemplate', lineStart: 290 },
          { name: 'gridTemplateAreas', lineStart: 292 },
          { name: 'gridTemplateColumns', lineStart: 294 },
          { name: 'gridTemplateRows', lineStart: 296 },
          { name: 'justifyContent', lineStart: 298 },
          { name: 'justifyItems', lineStart: 300 },
          { name: 'justifySelf', lineStart: 302 },
          { name: 'position', lineStart: 303 },
          { name: 'width', lineStart: 304 },
          { name: 'minWidth', lineStart: 305 },
          { name: 'maxWidth', lineStart: 306 },
          { name: 'height', lineStart: 307 },
          { name: 'minHeight', lineStart: 308 },
          { name: 'maxHeight', lineStart: 309 },
          { name: 'overflow', lineStart: 310 },
          { name: 'margin', lineStart: 311 },
          { name: 'marginTop', lineStart: 312 },
          { name: 'marginRight', lineStart: 313 },
          { name: 'marginBottom', lineStart: 314 },
          { name: 'marginLeft', lineStart: 315 },
          { name: 'padding', lineStart: 316 },
          { name: 'paddingTop', lineStart: 317 },
          { name: 'paddingRight', lineStart: 318 },
          { name: 'paddingBottom', lineStart: 319 },
          { name: 'paddingLeft', lineStart: 320 },
          { name: 'placeContent', lineStart: 322 },
          { name: 'placeItems', lineStart: 324 },
          { name: 'placeSelf', lineStart: 326 },
          { name: 'flexWrap', lineStart: 327 },
          { name: 'left', lineStart: 328 },
          { name: 'top', lineStart: 329 },
          { name: 'right', lineStart: 330 },
          { name: 'bottom', lineStart: 331 },
          { name: 'textOverflow', lineStart: 333 },
          { name: 'whiteSpace', lineStart: 335 },
        ],
      },
      {
        name: 'StyledBlockProps',
        lineStart: 338,
        children: [
          { name: '$color', lineStart: 339 },
          { name: '$backgroundAttachment', lineStart: 340 },
          { name: '$backgroundClip', lineStart: 341 },
          { name: '$backgroundColor', lineStart: 342 },
          { name: '$backgroundImage', lineStart: 343 },
          { name: '$backgroundOrigin', lineStart: 344 },
          { name: '$backgroundPosition', lineStart: 345 },
          { name: '$backgroundRepeat', lineStart: 346 },
          { name: '$backgroundSize', lineStart: 347 },
          { name: '$font', lineStart: 348 },
          { name: '$alignContent', lineStart: 349 },
          { name: '$alignItems', lineStart: 350 },
          { name: '$alignSelf', lineStart: 351 },
          { name: '$flexDirection', lineStart: 352 },
          { name: '$display', lineStart: 353 },
          { name: '$flex', lineStart: 354 },
          { name: '$grid', lineStart: 355 },
          { name: '$gridArea', lineStart: 356 },
          { name: '$gridAutoColumns', lineStart: 357 },
          { name: '$gridAutoFlow', lineStart: 358 },
          { name: '$gridAutoRows', lineStart: 359 },
          { name: '$gridColumn', lineStart: 360 },
          { name: '$gridColumnEnd', lineStart: 361 },
          { name: '$gridColumnGap', lineStart: 362 },
          { name: '$gridColumnStart', lineStart: 363 },
          { name: '$gridGap', lineStart: 364 },
          { name: '$gridRow', lineStart: 365 },
          { name: '$gridRowEnd', lineStart: 366 },
          { name: '$gridRowGap', lineStart: 367 },
          { name: '$gridRowStart', lineStart: 368 },
          { name: '$gridTemplate', lineStart: 369 },
          { name: '$gridTemplateAreas', lineStart: 370 },
          { name: '$gridTemplateColumns', lineStart: 371 },
          { name: '$gridTemplateRows', lineStart: 372 },
          { name: '$justifyContent', lineStart: 373 },
          { name: '$justifyItems', lineStart: 374 },
          { name: '$justifySelf', lineStart: 375 },
          { name: '$position', lineStart: 376 },
          { name: '$width', lineStart: 377 },
          { name: '$minWidth', lineStart: 378 },
          { name: '$maxWidth', lineStart: 379 },
          { name: '$height', lineStart: 380 },
          { name: '$minHeight', lineStart: 381 },
          { name: '$maxHeight', lineStart: 382 },
          { name: '$overflow', lineStart: 383 },
          { name: '$margin', lineStart: 384 },
          { name: '$marginTop', lineStart: 385 },
          { name: '$marginRight', lineStart: 386 },
          { name: '$marginBottom', lineStart: 387 },
          { name: '$marginLeft', lineStart: 388 },
          { name: '$padding', lineStart: 389 },
          { name: '$paddingTop', lineStart: 390 },
          { name: '$paddingRight', lineStart: 391 },
          { name: '$paddingBottom', lineStart: 392 },
          { name: '$paddingLeft', lineStart: 393 },
          { name: '$placeContent', lineStart: 394 },
          { name: '$placeItems', lineStart: 395 },
          { name: '$placeSelf', lineStart: 396 },
          { name: '$flexWrap', lineStart: 397 },
          { name: '$left', lineStart: 398 },
          { name: '$top', lineStart: 399 },
          { name: '$right', lineStart: 400 },
          { name: '$bottom', lineStart: 401 },
          { name: '$textOverflow', lineStart: 402 },
          { name: '$whiteSpace', lineStart: 403 },
        ],
      },
    ],
  },
  {
    file: 'src/breadcrumbs/types.ts',
    definitions: [
      {
        name: 'BreadcrumbsOverrides',
        lineStart: 12,
        children: [
          { name: 'Root', lineStart: 13 },
          { name: 'Separator', lineStart: 14 },
          { name: 'List', lineStart: 15 },
          { name: 'ListItem', lineStart: 16 },
          { name: 'Icon', lineStart: 17 },
        ],
      },
      {
        name: 'BreadcrumbsProps',
        lineStart: 20,
        children: [
          { name: 'children', lineStart: 21 },
          { name: 'overrides', lineStart: 22 },
          { name: 'ariaLabel', lineStart: 23 },
          { lineStart: 24 },
          { name: 'showTrailingSeparator', lineStart: 26 },
        ],
      },
    ],
  },
  {
    file: 'src/button/types.ts',
    definitions: [
      {
        name: 'ButtonOverrides',
        lineStart: 12,
        children: [
          { name: 'Root', lineStart: 13 },
          { name: 'BaseButton', lineStart: 14 },
          { name: 'StartEnhancer', lineStart: 15 },
          { name: 'EndEnhancer', lineStart: 16 },
          { name: 'LoadingSpinnerContainer', lineStart: 17 },
          { name: 'LoadingSpinner', lineStart: 18 },
        ],
      },
      {
        name: 'CustomColors',
        lineStart: 21,
        children: [
          { name: 'backgroundColor', lineStart: 22 },
          { name: 'color', lineStart: 23 },
        ],
      },
      {
        name: 'ButtonProps',
        lineStart: 26,
        children: [
          { name: 'children', lineStart: 27 },
          { name: 'colors', lineStart: 28 },
          { name: 'disabled', lineStart: 29 },
          { name: 'endEnhancer', lineStart: 32 },
          { name: 'isLoading', lineStart: 34 },
          { name: 'isSelected', lineStart: 36 },
          { name: 'kind', lineStart: 38 },
          { name: 'onClick', lineStart: 39 },
          { name: 'overrides', lineStart: 40 },
          { name: 'shape', lineStart: 42 },
          { name: 'size', lineStart: 44 },
          { name: 'startEnhancer', lineStart: 47 },
          { name: 'type', lineStart: 48 },
        ],
      },
      {
        name: 'SharedStyleProps',
        lineStart: 51,
        children: [
          { name: '$colors', lineStart: 52 },
          { name: '$kind', lineStart: 53 },
          { name: '$isSelected', lineStart: 54 },
          { name: '$shape', lineStart: 55 },
          { name: '$size', lineStart: 56 },
          { name: '$isLoading', lineStart: 57 },
          { name: '$disabled', lineStart: 58 },
          { name: '$isFocusVisible', lineStart: 59 },
        ],
      },
    ],
  },
  {
    file: 'src/button-group/types.ts',
    definitions: [
      {
        name: 'ButtonGroupProps',
        lineStart: 14,
        children: [
          { name: 'ariaLabel', lineStart: 16 },
          { lineStart: 17 },
          { name: 'children', lineStart: 19 },
          { name: 'disabled', lineStart: 21 },
          { name: 'mode', lineStart: 27 },
          { name: 'onClick', lineStart: 33 },
          { name: 'overrides', lineStart: 34 },
          { name: 'selected', lineStart: 39 },
          { name: 'shape', lineStart: 41 },
          { name: 'size', lineStart: 43 },
          { name: 'kind', lineStart: 45 },
        ],
      },
      { name: 'StatefulButtonGroupProps', lineStart: 53, children: [] },
      { name: 'StatefulContainerProps', lineStart: 64, children: [] },
      { name: 'State', lineStart: 73, children: [{ name: 'selected', lineStart: 74 }] },
      { name: 'StateReducer', lineStart: 77, children: [] },
    ],
  },
  {
    file: 'src/button-timed/types.ts',
    definitions: [
      { name: 'ButtonTimedOverrides', lineStart: 10, children: [] },
      { name: 'ButtonTimedProps', lineStart: 14, children: [] },
    ],
  },
  {
    file: 'src/card/types.ts',
    definitions: [
      {
        name: 'CardOverrides',
        lineStart: 10,
        children: [
          { name: 'Action', lineStart: 11 },
          { name: 'Body', lineStart: 12 },
          { name: 'Contents', lineStart: 13 },
          { name: 'HeaderImage', lineStart: 14 },
          { name: 'Root', lineStart: 15 },
          { name: 'Thumbnail', lineStart: 16 },
          { name: 'Title', lineStart: 17 },
        ],
      },
      {
        name: 'ImageProps',
        lineStart: 20,
        children: [
          { name: 'alt', lineStart: 21 },
          { name: 'complete', lineStart: 22 },
          { name: 'crossOrigin', lineStart: 23 },
          { name: 'currentSrc', lineStart: 24 },
          { name: 'height', lineStart: 25 },
          { name: 'decode', lineStart: 26 },
          { name: 'isMap', lineStart: 27 },
          { name: 'naturalHeight', lineStart: 28 },
          { name: 'naturalWidth', lineStart: 29 },
          { name: 'sizes', lineStart: 30 },
          { name: 'src', lineStart: 31 },
          { name: 'srcSet', lineStart: 32 },
          { name: 'useMap', lineStart: 33 },
          { name: 'width', lineStart: 34 },
        ],
      },
      {
        name: 'CardProps',
        lineStart: 37,
        children: [
          { name: 'action', lineStart: 39 },
          { name: 'children', lineStart: 41 },
          { name: 'hasThumbnail', lineStart: 43 },
          { name: 'headerImage', lineStart: 45 },
          { name: 'overrides', lineStart: 46 },
          { name: 'thumbnail', lineStart: 48 },
          { name: 'title', lineStart: 50 },
        ],
      },
    ],
  },
  {
    file: 'src/checkbox/types.ts',
    definitions: [
      { name: 'LabelPlacement', lineStart: 11, children: [] },
      { name: 'StyleType', lineStart: 12, children: [] },
      {
        name: 'CheckboxOverrides',
        lineStart: 14,
        children: [
          { name: 'Checkmark', lineStart: 15 },
          { name: 'Label', lineStart: 16 },
          { name: 'Root', lineStart: 17 },
          { name: 'Input', lineStart: 18 },
          { name: 'Toggle', lineStart: 19 },
          { name: 'ToggleInner', lineStart: 20 },
          { name: 'ToggleTrack', lineStart: 21 },
        ],
      },
      {
        name: 'DefaultProps',
        lineStart: 24,
        children: [
          { name: 'overrides', lineStart: 26 },
          { name: 'children', lineStart: 27 },
          { name: 'checked', lineStart: 28 },
          { name: 'disabled', lineStart: 29 },
          { name: 'error', lineStart: 30 },
          { name: 'type', lineStart: 31 },
          { name: 'autoFocus', lineStart: 32 },
          { name: 'isIndeterminate', lineStart: 33 },
          { name: 'inputRef', lineStart: 34 },
          { name: 'checkmarkType', lineStart: 35 },
          { name: 'onChange', lineStart: 36 },
          { name: 'onMouseEnter', lineStart: 37 },
          { name: 'onMouseLeave', lineStart: 38 },
          { name: 'onMouseDown', lineStart: 39 },
          { name: 'onMouseUp', lineStart: 40 },
          { name: 'onFocus', lineStart: 41 },
          { name: 'onBlur', lineStart: 42 },
          { name: 'containsInteractiveElement', lineStart: 43 },
        ],
      },
      {
        name: 'CheckboxProps',
        lineStart: 46,
        children: [
          { lineStart: 48 },
          { lineStart: 50 },
          { name: 'ariaLabel', lineStart: 52 },
          { lineStart: 53 },
          { name: 'children', lineStart: 55 },
          { name: 'containsInteractiveElement', lineStart: 57 },
          { name: 'overrides', lineStart: 58 },
          { name: 'checked', lineStart: 60 },
          { name: 'disabled', lineStart: 62 },
          { name: 'required', lineStart: 64 },
          { name: 'error', lineStart: 66 },
          { name: 'inputRef', lineStart: 68 },
          { name: 'autoFocus', lineStart: 70 },
          { name: 'type', lineStart: 72 },
          { name: 'id', lineStart: 74 },
          { name: 'name', lineStart: 76 },
          { name: 'value', lineStart: 78 },
          { name: 'isIndeterminate', lineStart: 80 },
          { name: 'labelPlacement', lineStart: 82 },
          { name: 'checkmarkType', lineStart: 84 },
          { name: 'title', lineStart: 86 },
          { name: 'onChange', lineStart: 88 },
          { name: 'onMouseEnter', lineStart: 90 },
          { name: 'onMouseLeave', lineStart: 92 },
          { name: 'onMouseDown', lineStart: 94 },
          { name: 'onMouseUp', lineStart: 96 },
          { name: 'onFocus', lineStart: 98 },
          { name: 'onBlur', lineStart: 100 },
        ],
      },
      {
        name: 'CheckboxState',
        lineStart: 103,
        children: [
          { name: 'isFocused', lineStart: 104 },
          { name: 'isFocusVisible', lineStart: 105 },
          { name: 'isHovered', lineStart: 106 },
          { name: 'isActive', lineStart: 107 },
        ],
      },
      {
        name: 'CheckboxReducerState',
        lineStart: 110,
        children: [
          { name: 'checked', lineStart: 111 },
          { name: 'isIndeterminate', lineStart: 112 },
        ],
      },
      { name: 'StateReducer', lineStart: 115, children: [] },
      { name: 'StatefulContainerChildProps', lineStart: 122, children: [] },
      {
        name: 'DefaultStatefulProps',
        lineStart: 138,
        children: [
          { name: 'initialState', lineStart: 139 },
          { name: 'children', lineStart: 140 },
          { name: 'stateReducer', lineStart: 141 },
          { name: 'onChange', lineStart: 142 },
          { name: 'onMouseEnter', lineStart: 143 },
          { name: 'onMouseLeave', lineStart: 144 },
          { name: 'onFocus', lineStart: 145 },
          { name: 'onBlur', lineStart: 146 },
        ],
      },
      {
        name: 'StatefulContainerProps',
        lineStart: 149,
        children: [
          { name: 'overrides', lineStart: 150 },
          { name: 'children', lineStart: 152 },
          { name: 'initialState', lineStart: 154 },
          { name: 'stateReducer', lineStart: 156 },
          { name: 'onChange', lineStart: 158 },
          { name: 'onMouseEnter', lineStart: 160 },
          { name: 'onMouseLeave', lineStart: 162 },
          { name: 'onFocus', lineStart: 164 },
          { name: 'onBlur', lineStart: 166 },
          { name: 'autoFocus', lineStart: 168 },
        ],
      },
      { name: 'StatefulCheckboxProps', lineStart: 171, children: [] },
      {
        name: 'SharedStyleProps',
        lineStart: 177,
        children: [
          { name: '$isFocused', lineStart: 178 },
          { name: '$isFocusVisible', lineStart: 179 },
          { name: '$isHovered', lineStart: 180 },
          { name: '$isActive', lineStart: 181 },
          { name: '$error', lineStart: 182 },
          { name: '$checked', lineStart: 183 },
          { name: '$isIndeterminate', lineStart: 184 },
          { name: '$required', lineStart: 185 },
          { name: '$disabled', lineStart: 186 },
          { name: '$value', lineStart: 187 },
          { name: '$labelPlacement', lineStart: 188 },
        ],
      },
    ],
  },
  {
    file: 'src/combobox/types.ts',
    definitions: [
      {
        name: 'ComboboxOverrides',
        lineStart: 12,
        children: [
          { name: 'Root', lineStart: 13 },
          { name: 'InputContainer', lineStart: 14 },
          { name: 'Input', lineStart: 15 },
          { name: 'Popover', lineStart: 16 },
          { name: 'ListBox', lineStart: 17 },
          { name: 'ListItem', lineStart: 18 },
        ],
      },
      {
        name: 'ComboboxProps',
        lineStart: 21,
        children: [
          { name: 'autocomplete', lineStart: 23 },
          { name: 'disabled', lineStart: 25 },
          { name: 'error', lineStart: 27 },
          { name: 'listBoxLabel', lineStart: 29 },
          { name: 'mapOptionToNode', lineStart: 31 },
          { name: 'mapOptionToString', lineStart: 37 },
          { name: 'id', lineStart: 38 },
          { name: 'name', lineStart: 39 },
          { name: 'inputRef', lineStart: 42 },
          { name: 'onBlur', lineStart: 44 },
          { name: 'onChange', lineStart: 49 },
          { name: 'onFocus', lineStart: 51 },
          { name: 'onSubmit', lineStart: 54 },
          { name: 'options', lineStart: 56 },
          { name: 'overrides', lineStart: 57 },
          { name: 'positive', lineStart: 59 },
          { name: 'size', lineStart: 61 },
          { name: 'value', lineStart: 63 },
        ],
      },
    ],
  },
  {
    file: 'src/data-table/types.ts',
    definitions: [
      { name: 'SortDirections', lineStart: 11, children: [] },
      { name: 'Columns', lineStart: 13, children: [] },
      {
        name: 'SharedColumnOptions',
        lineStart: 17,
        children: [
          { name: 'cellBlockAlign', lineStart: 18 },
          { name: 'fillWidth', lineStart: 19 },
          { name: 'filterable', lineStart: 20 },
          { name: 'mapDataToValue', lineStart: 22 },
          { name: 'maxWidth', lineStart: 23 },
          { name: 'minWidth', lineStart: 24 },
          { name: 'sortable', lineStart: 25 },
          { name: 'title', lineStart: 26 },
        ],
      },
      { name: 'RenderCell', lineStart: 29, children: [] },
      { name: 'RenderFilter', lineStart: 39, children: [] },
      { name: 'ColumnOptions', lineStart: 47, children: [] },
      {
        name: 'Row',
        lineStart: 57,
        children: [
          { name: 'id', lineStart: 58 },
          { name: 'data', lineStart: 60 },
        ],
      },
      {
        name: 'BatchAction',
        lineStart: 63,
        children: [
          { name: 'label', lineStart: 64 },
          { name: 'onClick', lineStart: 65 },
          { name: 'renderIcon', lineStart: 70 },
        ],
      },
      {
        name: 'RowAction',
        lineStart: 78,
        children: [
          { name: 'label', lineStart: 79 },
          { name: 'onClick', lineStart: 80 },
          { name: 'renderIcon', lineStart: 81 },
          { name: 'renderButton', lineStart: 87 },
        ],
      },
      {
        name: 'ImperativeMethods',
        lineStart: 90,
        children: [
          { name: 'getRows', lineStart: 91 },
          { name: 'clearSelection', lineStart: 92 },
        ],
      },
      { name: 'ControlRef', lineStart: 95, children: [{ name: 'current', lineStart: 96 }] },
      {
        name: 'StatefulDataTableProps',
        lineStart: 99,
        children: [
          { name: 'batchActions', lineStart: 100 },
          { name: 'columns', lineStart: 101 },
          { name: 'emptyMessage', lineStart: 102 },
          { name: 'filterable', lineStart: 103 },
          { name: 'initialFilters', lineStart: 104 },
          { name: 'initialSelectedRowIds', lineStart: 110 },
          { name: 'initialSortIndex', lineStart: 111 },
          { name: 'initialSortDirection', lineStart: 112 },
          { name: 'loading', lineStart: 113 },
          { name: 'loadingMessage', lineStart: 114 },
          { name: 'onFilterAdd', lineStart: 115 },
          { name: 'onFilterRemove', lineStart: 121 },
          { name: 'onIncludedRowsChange', lineStart: 122 },
          { name: 'onRowHighlightChange', lineStart: 123 },
          { name: 'onSelectionChange', lineStart: 124 },
          { name: 'onSort', lineStart: 125 },
          { name: 'onTextQueryChange', lineStart: 126 },
          { name: 'resizableColumnWidths', lineStart: 127 },
          { name: 'rows', lineStart: 128 },
          { name: 'rowActions', lineStart: 129 },
          { name: 'rowHeight', lineStart: 130 },
          { name: 'rowHighlightIndex', lineStart: 131 },
          { name: 'searchable', lineStart: 132 },
          { name: 'controlRef', lineStart: 133 },
        ],
      },
      { name: 'DataTableProps', lineStart: 136, children: [] },
      { name: 'StatefulContainerProps', lineStart: 160, children: [] },
    ],
  },
  {
    file: 'src/datepicker/types.ts',
    definitions: [
      { name: 'Density', lineStart: 28, children: [] },
      {
        name: 'DatepickerOverrides',
        lineStart: 30,
        children: [
          { name: 'Root', lineStart: 31 },
          { name: 'QuickSelect', lineStart: 33 },
          { name: 'QuickSelectContainer', lineStart: 34 },
          { name: 'QuickSelectFormControl', lineStart: 36 },
          { name: 'TimeSelect', lineStart: 38 },
          { name: 'TimeSelectContainer', lineStart: 39 },
          { name: 'TimeSelectFormControl', lineStart: 41 },
          { name: 'CalendarContainer', lineStart: 42 },
          { name: 'CalendarHeader', lineStart: 43 },
          { name: 'PrevButton', lineStart: 44 },
          { name: 'PrevButtonIcon', lineStart: 45 },
          { name: 'NextButton', lineStart: 46 },
          { name: 'NextButtonIcon', lineStart: 47 },
          { name: 'MonthContainer', lineStart: 48 },
          { name: 'MonthHeader', lineStart: 49 },
          { name: 'MonthYearSelectButton', lineStart: 50 },
          { name: 'MonthYearSelectIconContainer', lineStart: 51 },
          { name: 'MonthYearSelectPopover', lineStart: 52 },
          { name: 'MonthYearSelectStatefulMenu', lineStart: 53 },
          { name: 'WeekdayHeader', lineStart: 54 },
          { name: 'Month', lineStart: 55 },
          { name: 'Week', lineStart: 56 },
          { name: 'Day', lineStart: 57 },
          { name: 'DayLabel', lineStart: 58 },
          { name: 'Input', lineStart: 60 },
          { name: 'InputWrapper', lineStart: 61 },
          { name: 'Popover', lineStart: 63 },
          { name: 'StartDate', lineStart: 64 },
          { name: 'EndDate', lineStart: 65 },
          { name: 'InputLabel', lineStart: 66 },
        ],
      },
      {
        name: 'DayProps',
        lineStart: 69,
        children: [
          { name: 'disabled', lineStart: 70 },
          { name: 'date', lineStart: 71 },
          { name: 'dateLabel', lineStart: 72 },
          { name: 'density', lineStart: 73 },
          { name: 'filterDate', lineStart: 74 },
          { name: 'highlightedDate', lineStart: 75 },
          { name: 'includeDates', lineStart: 76 },
          { name: 'highlighted', lineStart: 77 },
          { name: 'range', lineStart: 78 },
          { name: 'hasLockedBehavior', lineStart: 79 },
          { name: 'selectedInput', lineStart: 80 },
          { name: 'focusedCalendar', lineStart: 81 },
          { name: 'locale', lineStart: 82 },
          { name: 'maxDate', lineStart: 83 },
          { name: 'adapter', lineStart: 84 },
          { name: 'minDate', lineStart: 85 },
          { name: 'month', lineStart: 86 },
          { name: 'onBlur', lineStart: 87 },
          { name: 'onFocus', lineStart: 88 },
          { name: 'onSelect', lineStart: 89 },
          { name: 'onClick', lineStart: 90 },
          { name: 'onMouseOver', lineStart: 91 },
          { name: 'onMouseLeave', lineStart: 92 },
          { name: 'overrides', lineStart: 93 },
          { name: 'peekNextMonth', lineStart: 94 },
          { name: 'value', lineStart: 95 },
        ],
      },
      {
        name: 'DayState',
        lineStart: 98,
        children: [
          { name: 'isHovered', lineStart: 99 },
          { name: 'isFocusVisible', lineStart: 100 },
        ],
      },
      {
        name: 'WeekProps',
        lineStart: 103,
        children: [
          { name: 'date', lineStart: 104 },
          { name: 'dateLabel', lineStart: 105 },
          { name: 'density', lineStart: 106 },
          { name: 'excludeDates', lineStart: 107 },
          { name: 'filterDate', lineStart: 108 },
          { name: 'highlightedDate', lineStart: 110 },
          { name: 'includeDates', lineStart: 111 },
          { name: 'focusedCalendar', lineStart: 112 },
          { name: 'range', lineStart: 113 },
          { name: 'locale', lineStart: 114 },
          { name: 'maxDate', lineStart: 115 },
          { name: 'minDate', lineStart: 116 },
          { name: 'adapter', lineStart: 117 },
          { name: 'month', lineStart: 118 },
          { name: 'onDayBlur', lineStart: 119 },
          { name: 'onDayClick', lineStart: 120 },
          { name: 'onDayFocus', lineStart: 121 },
          { name: 'onDayMouseOver', lineStart: 122 },
          { name: 'onDayMouseLeave', lineStart: 123 },
          { name: 'onChange', lineStart: 124 },
          { name: 'overrides', lineStart: 125 },
          { name: 'peekNextMonth', lineStart: 126 },
          { name: 'value', lineStart: 127 },
          { name: 'hasLockedBehavior', lineStart: 128 },
          { name: 'selectedInput', lineStart: 129 },
        ],
      },
      { name: 'MonthProps', lineStart: 132, children: [] },
      {
        name: 'CalendarInternalState',
        lineStart: 136,
        children: [
          { name: 'highlightedDate', lineStart: 137 },
          { name: 'focused', lineStart: 138 },
          { name: 'date', lineStart: 139 },
          { name: 'quickSelectId', lineStart: 140 },
          { name: 'rootElement', lineStart: 141 },
          { name: 'time', lineStart: 142 },
        ],
      },
      {
        name: 'CalendarProps',
        lineStart: 145,
        children: [
          { name: 'autoFocusCalendar', lineStart: 147 },
          { name: 'density', lineStart: 149 },
          { name: 'excludeDates', lineStart: 151 },
          { name: 'quickSelect', lineStart: 153 },
          { name: 'quickSelectOptions', lineStart: 155 },
          { name: 'filterDate', lineStart: 157 },
          { name: 'dateLabel', lineStart: 159 },
          { name: 'highlightedDate', lineStart: 161 },
          { name: 'includeDates', lineStart: 163 },
          { name: 'range', lineStart: 165 },
          { name: 'hasLockedBehavior', lineStart: 167 },
          { name: 'locale', lineStart: 169 },
          { name: 'maxDate', lineStart: 171 },
          { name: 'minDate', lineStart: 173 },
          { name: 'adapter', lineStart: 174 },
          { name: 'monthsShown', lineStart: 176 },
          { name: 'onDayClick', lineStart: 178 },
          { name: 'onDayFocus', lineStart: 180 },
          { name: 'onDayMouseOver', lineStart: 182 },
          { name: 'onDayMouseLeave', lineStart: 184 },
          { name: 'onMonthChange', lineStart: 186 },
          { name: 'onYearChange', lineStart: 188 },
          { name: 'onChange', lineStart: 190 },
          { name: 'onQuickSelectChange', lineStart: 192 },
          { name: 'orientation', lineStart: 194 },
          { name: 'overrides', lineStart: 195 },
          { name: 'peekNextMonth', lineStart: 197 },
          { name: 'timeSelectStart', lineStart: 199 },
          { name: 'timeSelectEnd', lineStart: 201 },
          { name: 'trapTabbing', lineStart: 203 },
          { name: 'value', lineStart: 205 },
          { name: 'fixedHeight', lineStart: 206 },
          { name: 'selectedInput', lineStart: 208 },
        ],
      },
      { name: 'HeaderProps', lineStart: 211, children: [] },
      {
        name: 'QuickSelectOption',
        lineStart: 216,
        children: [
          { name: 'id', lineStart: 217 },
          { name: 'beginDate', lineStart: 218 },
          { name: 'endDate', lineStart: 219 },
        ],
      },
      { name: 'DatepickerProps', lineStart: 222, children: [] },
      {
        name: 'SharedStyleProps',
        lineStart: 262,
        children: [
          { name: '$date', lineStart: 264 },
          { name: '$disabled', lineStart: 265 },
          { name: '$density', lineStart: 266 },
          { name: '$endDate', lineStart: 267 },
          { name: '$endOfMonth', lineStart: 268 },
          { name: '$isHighlighted', lineStart: 269 },
          { name: '$isHovered', lineStart: 270 },
          { name: '$isFocusVisible', lineStart: 271 },
          { name: '$month', lineStart: 272 },
          { name: '$outsideMonth', lineStart: 273 },
          { name: '$outsideMonthWithinRange', lineStart: 274 },
          { name: '$peekNextMonth', lineStart: 275 },
          { name: '$pseudoHighlighted', lineStart: 276 },
          { name: '$pseudoSelected', lineStart: 277 },
          { name: '$selected', lineStart: 278 },
          { name: '$startDate', lineStart: 279 },
          { name: '$startOfMonth', lineStart: 280 },
          { name: '$range', lineStart: 281 },
          { name: '$hasRangeHighlighted', lineStart: 282 },
          { name: '$hasRangeOnRight', lineStart: 283 },
          { name: '$hasRangeSelected', lineStart: 284 },
          { name: '$hasLockedBehavior', lineStart: 285 },
          { name: '$selectedInput', lineStart: 286 },
          { name: '$value', lineStart: 287 },
          { name: '$order', lineStart: 288 },
          { name: '$hasDateLabel', lineStart: 289 },
        ],
      },
      { name: 'StateChangeType', lineStart: 292, children: [] },
      {
        name: 'ContainerState',
        lineStart: 297,
        children: [
          { name: 'value', lineStart: 299 },
          { name: 'highlightedDate', lineStart: 300 },
        ],
      },
      {
        name: 'NavigationContainerState',
        lineStart: 303,
        children: [
          { name: 'highlightedDate', lineStart: 305 },
          { name: 'isActive', lineStart: 308 },
          { name: 'lastHighlightedDate', lineStart: 312 },
        ],
      },
      { name: 'StateReducer', lineStart: 315, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 321,
        children: [
          { name: 'children', lineStart: 322 },
          { name: 'initialState', lineStart: 324 },
          { name: 'stateReducer', lineStart: 326 },
          { name: 'onChange', lineStart: 328 },
          { name: 'onRangeChange', lineStart: 330 },
          { name: 'adapter', lineStart: 333 },
          { name: 'range', lineStart: 335 },
        ],
      },
      { name: 'StatefulDatepickerProps', lineStart: 338, children: [] },
      { name: 'InputRole', lineStart: 343, children: [] },
      { name: 'RangedCalendarBehavior', lineStart: 345, children: [] },
    ],
  },
  {
    file: 'src/divider/types.ts',
    definitions: [
      { name: 'DividerProps', lineStart: 9, children: [{ name: '$size', lineStart: 10 }] },
    ],
  },
  {
    file: 'src/dnd-list/types.ts',
    definitions: [
      { name: 'State', lineStart: 11, children: [{ name: 'items', lineStart: 12 }] },
      { name: 'StateChangeType', lineStart: 15, children: [] },
      { name: 'StateReducer', lineStart: 17, children: [] },
      {
        name: 'ListOverrides',
        lineStart: 23,
        children: [
          { name: 'Root', lineStart: 24 },
          { name: 'List', lineStart: 25 },
          { name: 'Item', lineStart: 26 },
          { name: 'DragHandle', lineStart: 27 },
          { name: 'CloseHandle', lineStart: 28 },
          { name: 'Label', lineStart: 29 },
        ],
      },
      {
        name: 'ListProps',
        lineStart: 36,
        children: [
          { name: 'removable', lineStart: 38 },
          { name: 'removableByMove', lineStart: 40 },
          { name: 'items', lineStart: 42 },
          { name: 'onChange', lineStart: 44 },
          { name: 'overrides', lineStart: 45 },
        ],
      },
      {
        name: 'StatefulListProps',
        lineStart: 49,
        children: [
          { name: 'initialState', lineStart: 51 },
          { name: 'stateReducer', lineStart: 53 },
          { name: 'removable', lineStart: 55 },
          { name: 'removableByMove', lineStart: 57 },
          { name: 'onChange', lineStart: 59 },
          { name: 'overrides', lineStart: 65 },
        ],
      },
      { name: 'StatefulComponentContainerProps', lineStart: 69, children: [] },
      {
        name: 'SharedStylePropsArg',
        lineStart: 74,
        children: [
          { name: '$isDragged', lineStart: 75 },
          { name: '$isSelected', lineStart: 76 },
          { name: '$isFocusVisible', lineStart: 77 },
          { name: '$isRemovable', lineStart: 78 },
          { name: '$isRemovableByMove', lineStart: 79 },
          { name: '$isOutOfBounds', lineStart: 80 },
          { name: '$value', lineStart: 81 },
          { name: '$index', lineStart: 82 },
        ],
      },
    ],
  },
  {
    file: 'src/drawer/types.ts',
    definitions: [
      { name: 'Size', lineStart: 11, children: [] },
      { name: 'SizeProp', lineStart: 12, children: [] },
      { name: 'Anchor', lineStart: 14, children: [] },
      { name: 'AnchorProp', lineStart: 15, children: [] },
      { name: 'CloseSource', lineStart: 17, children: [] },
      {
        name: 'DrawerOverrides',
        lineStart: 19,
        children: [
          { name: 'Root', lineStart: 20 },
          { name: 'Backdrop', lineStart: 21 },
          { name: 'DrawerBody', lineStart: 22 },
          { name: 'DrawerContainer', lineStart: 23 },
          { name: 'Close', lineStart: 24 },
        ],
      },
      { name: 'ElementRef', lineStart: 27, children: [{ name: 'current', lineStart: 29 }] },
      {
        name: 'DrawerProps',
        lineStart: 33,
        children: [
          { name: 'animate', lineStart: 35 },
          { name: 'isOpen', lineStart: 36 },
          { name: 'autoFocus', lineStart: 41 },
          { name: 'renderAll', lineStart: 43 },
          { name: 'mountNode', lineStart: 45 },
          { name: 'children', lineStart: 48 },
          { name: 'closeable', lineStart: 52 },
          { name: 'onClose', lineStart: 53 },
          { name: 'overrides', lineStart: 54 },
          { name: 'size', lineStart: 57 },
          { name: 'anchor', lineStart: 58 },
          { name: 'showBackdrop', lineStart: 60 },
          { name: 'onBackdropClick', lineStart: 62 },
          { name: 'onEscapeKeyDown', lineStart: 63 },
        ],
      },
      { name: 'DrawerPropsWithoutChildren', lineStart: 66, children: [] },
      {
        name: 'DrawerState',
        lineStart: 68,
        children: [
          { name: 'isVisible', lineStart: 69 },
          { name: 'mounted', lineStart: 70 },
          { name: 'isFocusVisible', lineStart: 71 },
        ],
      },
      {
        name: 'SharedStylePropsArg',
        lineStart: 74,
        children: [
          { name: 'children', lineStart: 75 },
          { name: '$animating', lineStart: 76 },
          { name: '$isVisible', lineStart: 77 },
          { name: '$isOpen', lineStart: 78 },
          { name: '$size', lineStart: 79 },
          { name: '$closeable', lineStart: 80 },
          { name: '$anchor', lineStart: 81 },
          { name: '$isFocusVisible', lineStart: 82 },
          { name: '$showBackdrop', lineStart: 83 },
        ],
      },
    ],
  },
  {
    file: 'src/file-uploader/types.ts',
    definitions: [
      {
        name: 'StyleProps',
        lineStart: 18,
        children: [
          { name: '$afterFileDrop', lineStart: 19 },
          { name: '$isDisabled', lineStart: 20 },
          { name: '$isDragActive', lineStart: 21 },
          { name: '$isDragAccept', lineStart: 22 },
          { name: '$isDragReject', lineStart: 23 },
          { name: '$isFocused', lineStart: 24 },
        ],
      },
      {
        name: 'FileUploaderOverrides',
        lineStart: 27,
        children: [
          { name: 'Root', lineStart: 28 },
          { name: 'FileDragAndDrop', lineStart: 29 },
          { name: 'ContentMessage', lineStart: 30 },
          { name: 'ContentSeparator', lineStart: 31 },
          { name: 'HiddenInput', lineStart: 32 },
          { name: 'ProgressMessage', lineStart: 33 },
          { name: 'ErrorMessage', lineStart: 34 },
          { name: 'ButtonComponent', lineStart: 35 },
          { name: 'CancelButtonComponent', lineStart: 36 },
          { name: 'RetryButtonComponent', lineStart: 37 },
          { name: 'Spinner', lineStart: 38 },
          { name: 'ProgressBar', lineStart: 39 },
        ],
      },
      {
        name: 'FileUploaderProps',
        lineStart: 42,
        children: [
          { name: 'accept', lineStart: 44 },
          { name: 'disableClick', lineStart: 46 },
          { name: 'disabled', lineStart: 47 },
          { name: 'getDataTransferItems', lineStart: 48 },
          { name: 'maxSize', lineStart: 49 },
          { name: 'minSize', lineStart: 50 },
          { name: 'multiple', lineStart: 51 },
          { name: 'name', lineStart: 52 },
          { name: 'onClick', lineStart: 53 },
          { name: 'onFocus', lineStart: 54 },
          { name: 'onBlur', lineStart: 55 },
          { name: 'onKeyDown', lineStart: 56 },
          { name: 'onDragStart', lineStart: 57 },
          { name: 'onDragEnter', lineStart: 58 },
          { name: 'onDragOver', lineStart: 59 },
          { name: 'onDragLeave', lineStart: 60 },
          { name: 'onDrop', lineStart: 61 },
          { name: 'onDropAccepted', lineStart: 62 },
          { name: 'onDropRejected', lineStart: 63 },
          { name: 'onFileDialogCancel', lineStart: 64 },
          { name: 'preventDropOnDocument', lineStart: 65 },
          { lineStart: 66 },
          { name: 'errorMessage', lineStart: 68 },
          { name: 'onCancel', lineStart: 69 },
          { name: 'onRetry', lineStart: 70 },
          { name: 'overrides', lineStart: 71 },
          { name: 'progressAmount', lineStart: 72 },
          { name: 'progressMessage', lineStart: 73 },
        ],
      },
      { name: 'DropFilesEventHandler', lineStart: 76, children: [] },
    ],
  },
  {
    file: 'src/flex-grid/types.ts',
    definitions: [
      { name: 'FlexGridProps', lineStart: 10, children: [] },
      { name: 'FlexGridItemProps', lineStart: 19, children: [] },
    ],
  },
  {
    file: 'src/form-control/types.ts',
    definitions: [
      { name: 'FormControlState', lineStart: 11, children: [{ name: 'captionId', lineStart: 12 }] },
      {
        name: 'FormControlOverrides',
        lineStart: 15,
        children: [
          { name: 'Label', lineStart: 17 },
          { name: 'LabelEndEnhancer', lineStart: 19 },
          { name: 'LabelContainer', lineStart: 21 },
          { name: 'Caption', lineStart: 23 },
          { name: 'ControlContainer', lineStart: 25 },
        ],
      },
      {
        name: 'FormControlProps',
        lineStart: 27,
        children: [
          { name: 'overrides', lineStart: 28 },
          { name: 'label', lineStart: 30 },
          { name: 'caption', lineStart: 32 },
          { name: 'disabled', lineStart: 34 },
          { name: 'error', lineStart: 36 },
          { name: 'positive', lineStart: 38 },
          { name: 'htmlFor', lineStart: 40 },
          { name: 'labelEndEnhancer', lineStart: 42 },
          { name: 'counter', lineStart: 44 },
          { name: 'children', lineStart: 51 },
        ],
      },
      {
        name: 'StyleProps',
        lineStart: 54,
        children: [
          { name: '$disabled', lineStart: 55 },
          { name: '$error', lineStart: 56 },
          { name: '$positive', lineStart: 57 },
          { name: '$length', lineStart: 58 },
          { name: '$maxLength', lineStart: 59 },
          { name: '$counterError', lineStart: 60 },
        ],
      },
    ],
  },
  {
    file: 'src/header-navigation/types.ts',
    definitions: [
      {
        name: 'HeaderNavigationOverrides',
        lineStart: 10,
        children: [{ name: 'Root', lineStart: 11 }],
      },
      { name: 'HeaderNavigationProps', lineStart: 14, children: [] },
    ],
  },
  {
    file: 'src/heading/types.ts',
    definitions: [
      { name: 'HeadingProps', lineStart: 10, children: [] },
      { name: 'HeadingLevelProps', lineStart: 15, children: [{ name: 'children', lineStart: 17 }] },
    ],
  },
  {
    file: 'src/helper/types.ts',
    definitions: [
      {
        name: 'HelperStepsProps',
        lineStart: 10,
        children: [
          { name: 'index', lineStart: 11 },
          { name: 'length', lineStart: 12 },
          { name: 'onFinish', lineStart: 13 },
          { name: 'onPrev', lineStart: 14 },
          { name: 'onNext', lineStart: 15 },
        ],
      },
    ],
  },
  {
    file: 'src/helpers/types.ts',
    definitions: [
      {
        name: 'BaseProviderOverrides',
        lineStart: 11,
        children: [
          { name: 'AppContainer', lineStart: 12 },
          { name: 'LayersContainer', lineStart: 13 },
        ],
      },
      {
        name: 'BaseProviderProps',
        lineStart: 16,
        children: [
          { name: 'children', lineStart: 19 },
          { name: 'overrides', lineStart: 20 },
          { name: 'theme', lineStart: 22 },
          { name: 'zIndex', lineStart: 24 },
        ],
      },
    ],
  },
  {
    file: 'src/icon/types.ts',
    definitions: [
      { name: 'IconOverrides', lineStart: 10, children: [{ name: 'Svg', lineStart: 11 }] },
      { name: 'Size', lineStart: 14, children: [] },
      { name: 'Color', lineStart: 15, children: [] },
      {
        name: 'StyledComponentArgs',
        lineStart: 17,
        children: [
          { name: '$size', lineStart: 18 },
          { name: '$color', lineStart: 19 },
        ],
      },
      { name: 'IconProps', lineStart: 22, children: [] },
    ],
  },
  {
    file: 'src/input/types.ts',
    definitions: [
      { name: 'Adjoined', lineStart: 13, children: [] },
      { name: 'Size', lineStart: 14, children: [] },
      { name: 'StateType', lineStart: 15, children: [] },
      {
        name: 'InternalState',
        lineStart: 17,
        children: [
          { name: 'isFocused', lineStart: 19 },
          { name: 'isMasked', lineStart: 21 },
          { name: 'isFocusVisibleForClear', lineStart: 23 },
          { name: 'isFocusVisibleForMaskToggle', lineStart: 25 },
        ],
      },
      { name: 'State', lineStart: 28, children: [{ name: 'value', lineStart: 29 }] },
      { name: 'StateReducer', lineStart: 32, children: [] },
      {
        name: 'SharedProps',
        lineStart: 34,
        children: [
          { name: '$isFocused', lineStart: 36 },
          { name: '$isReadOnly', lineStart: 38 },
          { name: '$disabled', lineStart: 40 },
          { name: '$error', lineStart: 42 },
          { name: '$positive', lineStart: 44 },
          { name: '$adjoined', lineStart: 46 },
          { name: '$size', lineStart: 48 },
          { name: '$required', lineStart: 50 },
          { name: '$resize', lineStart: 51 },
          { name: '$position', lineStart: 52 },
          { name: '$hasIconTrailing', lineStart: 54 },
        ],
      },
      {
        name: 'BaseInputOverrides',
        lineStart: 57,
        children: [
          { name: 'InputContainer', lineStart: 58 },
          { name: 'Input', lineStart: 59 },
          { name: 'Before', lineStart: 60 },
          { name: 'After', lineStart: 61 },
          { name: 'ClearIcon', lineStart: 62 },
          { name: 'ClearIconContainer', lineStart: 63 },
          { name: 'MaskToggleButton', lineStart: 64 },
          { name: 'MaskToggleShowIcon', lineStart: 65 },
          { name: 'MaskToggleHideIcon', lineStart: 66 },
        ],
      },
      { name: 'InputOverrides', lineStart: 69, children: [] },
      {
        name: 'BaseInputProps',
        lineStart: 75,
        children: [
          { lineStart: 76 },
          { lineStart: 77 },
          { lineStart: 78 },
          { lineStart: 80 },
          { lineStart: 82 },
          { lineStart: 84 },
          { lineStart: 86 },
          { lineStart: 88 },
          { name: 'adjoined', lineStart: 90 },
          { name: 'autoComplete', lineStart: 92 },
          { name: 'autoFocus', lineStart: 94 },
          { name: 'disabled', lineStart: 96 },
          { name: 'error', lineStart: 98 },
          { name: 'positive', lineStart: 100 },
          { name: 'pattern', lineStart: 102 },
          { name: 'id', lineStart: 104 },
          { lineStart: 105 },
          { name: 'inputMode', lineStart: 107 },
          { name: 'inputRef', lineStart: 109 },
          { name: 'name', lineStart: 110 },
          { name: 'onBlur', lineStart: 111 },
          { name: 'onChange', lineStart: 112 },
          { name: 'onKeyDown', lineStart: 113 },
          { name: 'onKeyPress', lineStart: 114 },
          { name: 'onKeyUp', lineStart: 115 },
          { name: 'onFocus', lineStart: 116 },
          { name: 'clearable', lineStart: 118 },
          { name: 'clearOnEscape', lineStart: 120 },
          { name: 'maxLength', lineStart: 121 },
          { name: 'onClear', lineStart: 122 },
          { name: 'overrides', lineStart: 123 },
          { name: 'placeholder', lineStart: 124 },
          { name: 'required', lineStart: 126 },
          { name: 'resize', lineStart: 127 },
          { name: 'role', lineStart: 129 },
          { name: 'size', lineStart: 131 },
          { name: 'type', lineStart: 133 },
          { name: 'value', lineStart: 135 },
          { name: 'rows', lineStart: 136 },
          { name: 'min', lineStart: 138 },
          { name: 'max', lineStart: 140 },
          { name: 'step', lineStart: 142 },
          { name: 'readOnly', lineStart: 144 },
        ],
      },
      { name: 'InputProps', lineStart: 147, children: [] },
      { name: 'MaskedInputProps', lineStart: 159, children: [] },
      { name: 'StatefulContainerChildrenProps', lineStart: 168, children: [] },
      { name: 'StatefulContainerProps', lineStart: 174, children: [] },
      { name: 'StInputPropsDiff', lineStart: 198, children: [] },
      { name: 'StatefulInputProps', lineStart: 200, children: [] },
    ],
  },
  {
    file: 'src/layer/types.ts',
    definitions: [
      {
        name: 'LayersManagerProps',
        lineStart: 12,
        children: [
          { name: 'children', lineStart: 13 },
          { name: 'overrides', lineStart: 14 },
          { name: 'zIndex', lineStart: 19 },
        ],
      },
      {
        name: 'LayersManagerState',
        lineStart: 22,
        children: [
          { name: 'escapeKeyHandlers', lineStart: 23 },
          { name: 'keyDownHandlers', lineStart: 24 },
          { name: 'keyUpHandlers', lineStart: 25 },
          { name: 'keyPressHandlers', lineStart: 26 },
          { name: 'docClickHandlers', lineStart: 27 },
        ],
      },
      {
        name: 'LayersContextProps',
        lineStart: 30,
        children: [
          { name: 'host', lineStart: 31 },
          { name: 'zIndex', lineStart: 32 },
          { name: 'addEscapeHandler', lineStart: 33 },
          { name: 'removeEscapeHandler', lineStart: 34 },
          { name: 'addKeyDownHandler', lineStart: 35 },
          { name: 'removeKeyDownHandler', lineStart: 36 },
          { name: 'addKeyUpHandler', lineStart: 37 },
          { name: 'removeKeyUpHandler', lineStart: 38 },
          { name: 'addKeyPressHandler', lineStart: 39 },
          { name: 'removeKeyPressHandler', lineStart: 40 },
          { name: 'addDocClickHandler', lineStart: 41 },
          { name: 'removeDocClickHandler', lineStart: 42 },
        ],
      },
      {
        name: 'LayerProps',
        lineStart: 46,
        children: [
          { name: 'children', lineStart: 48 },
          { name: 'host', lineStart: 53 },
          { name: 'index', lineStart: 56 },
          { name: 'isHoverLayer', lineStart: 59 },
          { name: 'mountNode', lineStart: 62 },
          { name: 'onEscape', lineStart: 65 },
          { name: 'onKeyDown', lineStart: 68 },
          { name: 'onKeyUp', lineStart: 71 },
          { name: 'onKeyPress', lineStart: 74 },
          { name: 'onDocumentClick', lineStart: 77 },
          { name: 'onMount', lineStart: 79 },
          { name: 'onUnmount', lineStart: 81 },
          { name: 'zIndex', lineStart: 84 },
        ],
      },
      {
        name: 'LayerComponentProps',
        lineStart: 87,
        children: [
          { name: 'children', lineStart: 88 },
          { name: 'host', lineStart: 89 },
          { name: 'index', lineStart: 90 },
          { name: 'isHoverLayer', lineStart: 91 },
          { name: 'mountNode', lineStart: 92 },
          { name: 'onEscape', lineStart: 93 },
          { name: 'onKeyDown', lineStart: 94 },
          { name: 'onKeyUp', lineStart: 95 },
          { name: 'onKeyPress', lineStart: 96 },
          { name: 'onDocumentClick', lineStart: 97 },
          { name: 'onMount', lineStart: 98 },
          { name: 'onUnmount', lineStart: 99 },
          { name: 'zIndex', lineStart: 100 },
        ],
      },
      { name: 'LayerState', lineStart: 103, children: [{ name: 'container', lineStart: 104 }] },
      { name: 'TetherPlacement', lineStart: 108, children: [] },
      {
        name: 'NormalizedOffset',
        lineStart: 110,
        children: [
          { name: 'top', lineStart: 111 },
          { name: 'left', lineStart: 112 },
        ],
      },
      {
        name: 'NormalizedOffsets',
        lineStart: 115,
        children: [
          { name: 'arrow', lineStart: 116 },
          { name: 'popper', lineStart: 117 },
        ],
      },
      {
        name: 'PopperOffset',
        lineStart: 120,
        children: [
          { name: 'top', lineStart: 121 },
          { name: 'left', lineStart: 122 },
        ],
      },
      {
        name: 'PopperDataObject',
        lineStart: 125,
        children: [
          { name: 'offsets', lineStart: 126 },
          { name: 'placement', lineStart: 130 },
        ],
      },
      {
        name: 'PopperOptions',
        lineStart: 133,
        children: [
          { name: 'placement', lineStart: 134 },
          { name: 'modifiers', lineStart: 135 },
        ],
      },
      {
        name: 'TetherProps',
        lineStart: 145,
        children: [
          { name: 'anchorRef', lineStart: 147 },
          { name: 'arrowRef', lineStart: 150 },
          { name: 'popperRef', lineStart: 152 },
          { name: 'children', lineStart: 154 },
          { name: 'onPopperUpdate', lineStart: 156 },
          { name: 'placement', lineStart: 158 },
          { name: 'popperOptions', lineStart: 163 },
        ],
      },
      { name: 'TetherState', lineStart: 166, children: [{ name: 'isMounted', lineStart: 167 }] },
    ],
  },
  {
    file: 'src/layout-grid/types.ts',
    definitions: [
      { name: 'Responsive', lineStart: 12, children: [] },
      { name: 'Alignment', lineStart: 14, children: [] },
      { name: 'Behavior', lineStart: 16, children: [] },
      { name: 'CSSLengthUnit', lineStart: 17, children: [] },
      { name: 'GridStyle', lineStart: 36, children: [] },
      {
        name: 'SharedGridProps',
        lineStart: 38,
        children: [
          { name: 'gridColumns', lineStart: 40 },
          { name: 'gridGaps', lineStart: 42 },
          { name: 'gridGutters', lineStart: 44 },
          { name: 'gridUnit', lineStart: 46 },
        ],
      },
      {
        name: 'GridOverrides',
        lineStart: 49,
        children: [
          { name: 'Grid', lineStart: 50 },
          { name: 'GridWrapper', lineStart: 51 },
        ],
      },
      { name: 'GridProps', lineStart: 54, children: [] },
      {
        name: 'StyledGridWrapperProps',
        lineStart: 71,
        children: [
          { name: '$behavior', lineStart: 73 },
          { name: '$gridMargins', lineStart: 75 },
          { name: '$gridMaxWidth', lineStart: 77 },
          { name: '$gridUnit', lineStart: 79 },
        ],
      },
      {
        name: 'StyledGridProps',
        lineStart: 82,
        children: [
          { name: '$align', lineStart: 84 },
          { name: '$behavior', lineStart: 86 },
          { name: '$gridGutters', lineStart: 88 },
          { name: '$gridMargins', lineStart: 90 },
          { name: '$gridMaxWidth', lineStart: 92 },
          { name: '$gridUnit', lineStart: 94 },
          { name: '$gridStyle', lineStart: 96 },
        ],
      },
      { name: 'CellOverrides', lineStart: 99, children: [{ name: 'Cell', lineStart: 100 }] },
      { name: 'CellProps', lineStart: 102, children: [] },
      {
        name: 'StyledCellProps',
        lineStart: 117,
        children: [
          { name: '$align', lineStart: 119 },
          { name: '$gridColumns', lineStart: 121 },
          { name: '$gridGaps', lineStart: 123 },
          { name: '$gridGutters', lineStart: 125 },
          { name: '$gridUnit', lineStart: 127 },
          { name: '$order', lineStart: 129 },
          { name: '$skip', lineStart: 131 },
          { name: '$span', lineStart: 133 },
        ],
      },
    ],
  },
  {
    file: 'src/list/types.ts',
    definitions: [
      { name: 'ArtworkSizes', lineStart: 13, children: [] },
      { name: 'Shape', lineStart: 18, children: [] },
      { name: 'StyledRootProps', lineStart: 20, children: [{ name: '$shape', lineStart: 21 }] },
      {
        name: 'StyledArtworkContainerProps',
        lineStart: 23,
        children: [
          { name: '$artworkSize', lineStart: 24 },
          { name: '$sublist', lineStart: 25 },
        ],
      },
      {
        name: 'StyledContentProps',
        lineStart: 27,
        children: [
          { name: '$mLeft', lineStart: 28 },
          { name: '$sublist', lineStart: 29 },
        ],
      },
      {
        name: 'ListOverrides',
        lineStart: 32,
        children: [
          { name: 'Root', lineStart: 33 },
          { name: 'ArtworkContainer', lineStart: 34 },
          { name: 'Content', lineStart: 35 },
          { name: 'EndEnhancerContainer', lineStart: 36 },
        ],
      },
      {
        name: 'ListProps',
        lineStart: 39,
        children: [
          { name: 'artwork', lineStart: 40 },
          { name: 'artworkSize', lineStart: 45 },
          { name: 'shape', lineStart: 46 },
          { name: 'children', lineStart: 47 },
          { name: 'endEnhancer', lineStart: 48 },
          { lineStart: 49 },
          { lineStart: 50 },
          { name: 'id', lineStart: 51 },
          { name: 'overrides', lineStart: 52 },
          { name: 'role', lineStart: 53 },
          { name: 'sublist', lineStart: 54 },
        ],
      },
      {
        name: 'LabelOverrides',
        lineStart: 57,
        children: [
          { name: 'LabelContent', lineStart: 58 },
          { name: 'LabelDescription', lineStart: 59 },
          { name: 'LabelSublistContent', lineStart: 60 },
        ],
      },
      {
        name: 'LabelProps',
        lineStart: 63,
        children: [
          { name: 'children', lineStart: 64 },
          { name: 'description', lineStart: 65 },
          { name: 'sublist', lineStart: 66 },
          { name: 'overrides', lineStart: 67 },
        ],
      },
      {
        name: 'HeadingOverrides',
        lineStart: 70,
        children: [
          { name: 'Root', lineStart: 71 },
          { name: 'Content', lineStart: 72 },
          { name: 'HeadingContainer', lineStart: 73 },
          { name: 'SubHeadingContainer', lineStart: 74 },
          { name: 'EndEnhancerContainer', lineStart: 75 },
          { name: 'EndEnhancerDescriptionContainer', lineStart: 76 },
        ],
      },
      {
        name: 'HeadingProps',
        lineStart: 79,
        children: [
          { name: 'heading', lineStart: 80 },
          { name: 'subHeading', lineStart: 81 },
          { name: 'endEnhancer', lineStart: 82 },
          { name: 'endEnhancerDescription', lineStart: 83 },
          { name: 'overrides', lineStart: 84 },
          { name: 'maxLines', lineStart: 85 },
        ],
      },
      {
        name: 'StyledHeadingHeadingProps',
        lineStart: 88,
        children: [{ name: '$maxLines', lineStart: 89 }],
      },
      { name: 'MenuAdapterProps', lineStart: 92, children: [] },
    ],
  },
  {
    file: 'src/locale/types.ts',
    definitions: [
      {
        name: 'Locale',
        lineStart: 20,
        children: [
          { name: 'accordion', lineStart: 21 },
          { name: 'breadcrumbs', lineStart: 22 },
          { name: 'datepicker', lineStart: 23 },
          { name: 'datatable', lineStart: 24 },
          { name: 'buttongroup', lineStart: 25 },
          { name: 'fileuploader', lineStart: 26 },
          { name: 'menu', lineStart: 27 },
          { name: 'modal', lineStart: 28 },
          { name: 'drawer', lineStart: 29 },
          { name: 'pagination', lineStart: 30 },
          { name: 'select', lineStart: 31 },
          { name: 'toast', lineStart: 32 },
        ],
      },
    ],
  },
  {
    file: 'src/map-marker/types.ts',
    definitions: [
      { name: 'AnchorPositions', lineStart: 24, children: [] },
      { name: 'NeedleSize', lineStart: 27, children: [] },
      { name: 'PinHead', lineStart: 29, children: [] },
      { name: 'PinHeadSize', lineStart: 31, children: [] },
      { name: 'FloatingMarkerSize', lineStart: 33, children: [] },
      { name: 'FloatingMarkerAnchorType', lineStart: 35, children: [] },
      { name: 'BadgeEnhancerSize', lineStart: 38, children: [] },
      { name: 'LabelEnhancerPosition', lineStart: 40, children: [] },
      { name: 'Kind', lineStart: 43, children: [] },
      { name: 'LocationPuckSize', lineStart: 45, children: [] },
      { name: 'LocationPuckType', lineStart: 46, children: [] },
      { name: 'FloatingRouteMarkerAnchorPositions', lineStart: 48, children: [] },
      {
        name: 'FixedMarkerOverrides',
        lineStart: 51,
        children: [
          { name: 'Root', lineStart: 52 },
          { name: 'InnerAnchor', lineStart: 53 },
          { name: 'OuterAnchor', lineStart: 54 },
          { name: 'PinHead', lineStart: 55 },
          { name: 'LabelSlot', lineStart: 56 },
          { name: 'Label', lineStart: 57 },
          { name: 'SecondaryLabel', lineStart: 58 },
          { name: 'EnhancerSlot', lineStart: 59 },
          { name: 'PinHeadContainer', lineStart: 60 },
          { name: 'AnchorContainer', lineStart: 61 },
          { name: 'Needle', lineStart: 62 },
          { name: 'DragShadow', lineStart: 63 },
          { name: 'DragShadowContainer', lineStart: 64 },
          { name: 'DragContainer', lineStart: 65 },
          { name: 'BadgeEnhancer', lineStart: 66 },
          { name: 'LabelEnhancer', lineStart: 67 },
          { name: 'LabelEnhancerContainer', lineStart: 68 },
        ],
      },
      {
        name: 'NeedleProps',
        lineStart: 71,
        children: [
          { name: 'size', lineStart: 72 },
          { name: 'background', lineStart: 73 },
          { name: 'overrides', lineStart: 74 },
        ],
      },
      {
        name: 'ItemProps',
        lineStart: 77,
        children: [
          { name: 'children', lineStart: 78 },
          { name: 'color', lineStart: 79 },
          { name: 'size', lineStart: 80 },
        ],
      },
      {
        name: 'LabelEnhancer',
        lineStart: 83,
        children: [
          { name: 'labelEnhancerContent', lineStart: 84 },
          { name: 'labelEnhancerPosition', lineStart: 85 },
        ],
      },
      { name: 'LabelEhancerComponent', lineStart: 88, children: [] },
      {
        name: 'BadgeEnhancer',
        lineStart: 94,
        children: [
          { name: 'badgeEnhancerSize', lineStart: 95 },
          { name: 'badgeEnhancerContent', lineStart: 96 },
        ],
      },
      { name: 'BadgeEnhancerComponent', lineStart: 101, children: [] },
      {
        name: 'BadgePosition',
        lineStart: 106,
        children: [
          { name: 'x', lineStart: 107 },
          { name: 'y', lineStart: 108 },
        ],
      },
      { name: 'FixedMarkerProps', lineStart: 111, children: [] },
      {
        name: 'FloatingMarkerOverrides',
        lineStart: 127,
        children: [
          { name: 'Root', lineStart: 128 },
          { name: 'InnerAnchor', lineStart: 129 },
          { name: 'OuterAnchor', lineStart: 130 },
          { name: 'PinHead', lineStart: 131 },
          { name: 'LabelSlot', lineStart: 132 },
          { name: 'Label', lineStart: 133 },
          { name: 'SecondaryLabel', lineStart: 134 },
          { name: 'EnhancerSlot', lineStart: 135 },
          { name: 'PinHeadContainer', lineStart: 136 },
          { name: 'AnchorContainer', lineStart: 137 },
          { name: 'Needle', lineStart: 138 },
          { name: 'DragShadow', lineStart: 139 },
          { name: 'DragShadowContainer', lineStart: 140 },
          { name: 'DragContainer', lineStart: 141 },
          { name: 'BadgeEnhancer', lineStart: 142 },
          { name: 'LabelEnhancer', lineStart: 143 },
          { name: 'LabelEnhancerContainer', lineStart: 144 },
        ],
      },
      {
        name: 'FloatingMarkerProps',
        lineStart: 147,
        children: [
          { name: 'label', lineStart: 148 },
          { name: 'secondaryLabel', lineStart: 149 },
          { name: 'anchor', lineStart: 150 },
          { name: 'endEnhancer', lineStart: 151 },
          { name: 'startEnhancer', lineStart: 154 },
          { name: 'anchorType', lineStart: 157 },
          { name: 'size', lineStart: 158 },
          { name: 'overrides', lineStart: 159 },
        ],
      },
      { name: 'PinHeadProps', lineStart: 162, children: [] },
      {
        name: 'DragShadowProps',
        lineStart: 181,
        children: [
          { name: 'background', lineStart: 182 },
          { name: 'dragging', lineStart: 183 },
          { name: 'height', lineStart: 184 },
          { name: 'overrides', lineStart: 185 },
        ],
      },
      {
        name: 'LocationPuckOverrides',
        lineStart: 188,
        children: [
          { name: 'Root', lineStart: 189 },
          { name: 'LocationPuckApproximation', lineStart: 190 },
          { name: 'ConsumerLocationPuckCore', lineStart: 191 },
          { name: 'EarnerLocationPuckCore', lineStart: 192 },
        ],
      },
      {
        name: 'LocationPuckProps',
        lineStart: 195,
        children: [
          { name: 'size', lineStart: 196 },
          { name: 'heading', lineStart: 197 },
          { name: 'confidenceRadius', lineStart: 198 },
          { name: 'showHeading', lineStart: 199 },
          { name: 'type', lineStart: 200 },
          { name: 'overrides', lineStart: 201 },
        ],
      },
      {
        name: 'ConsumerLocationPuckProps',
        lineStart: 204,
        children: [
          { name: 'heading', lineStart: 205 },
          { name: 'confidenceRadius', lineStart: 206 },
          { name: 'showHeading', lineStart: 207 },
          { name: 'overrides', lineStart: 208 },
        ],
      },
      {
        name: 'EarnerLocationPuckProps',
        lineStart: 210,
        children: [
          { name: 'heading', lineStart: 211 },
          { name: 'confidenceRadius', lineStart: 212 },
          { name: 'size', lineStart: 213 },
          { name: 'overrides', lineStart: 214 },
        ],
      },
      {
        name: 'FloatingRouteMarkerOverrides',
        lineStart: 217,
        children: [
          { name: 'Root', lineStart: 218 },
          { name: 'PointerContainer', lineStart: 219 },
          { name: 'Pointer', lineStart: 220 },
          { name: 'Label', lineStart: 221 },
          { name: 'SecondaryLabel', lineStart: 222 },
          { name: 'IconContainer', lineStart: 223 },
        ],
      },
      {
        name: 'FloatingRouteMarkerProps',
        lineStart: 226,
        children: [
          { name: 'label', lineStart: 227 },
          { name: 'secondaryLabel', lineStart: 228 },
          { name: 'startEnhancer', lineStart: 229 },
          { name: 'endEnhancer', lineStart: 232 },
          { name: 'anchorPosition', lineStart: 235 },
          { name: 'overrides', lineStart: 236 },
          { name: 'selected', lineStart: 237 },
        ],
      },
    ],
  },
  {
    file: 'src/menu/types.ts',
    definitions: [
      { name: 'Item', lineStart: 12, children: [] },
      { name: 'ArrayItems', lineStart: 13, children: [] },
      {
        name: 'GroupedItems',
        lineStart: 14,
        children: [
          { name: '__ungrouped', lineStart: 15 },
          { name: 'index', lineStart: 16 },
        ],
      },
      { name: 'Items', lineStart: 18, children: [] },
      { name: 'GetItemLabelFn', lineStart: 20, children: [] },
      { name: 'GetProfileItemLabelsFn', lineStart: 22, children: [] },
      { name: 'GetProfileItemImgFn', lineStart: 29, children: [] },
      { name: 'GetProfileItemImgTextFn', lineStart: 31, children: [] },
      { name: 'SetRootRefFn', lineStart: 33, children: [] },
      { name: 'RootRef', lineStart: 35, children: [{ name: 'current', lineStart: 36 }] },
      { name: 'OnItemSelectFn', lineStart: 39, children: [] },
      {
        name: 'ProfileOverrides',
        lineStart: 44,
        children: [
          { name: 'List', lineStart: 45 },
          { name: 'ListItemProfile', lineStart: 46 },
          { name: 'ProfileImgContainer', lineStart: 47 },
          { name: 'ProfileImg', lineStart: 48 },
          { name: 'ProfileLabelsContainer', lineStart: 49 },
          { name: 'ProfileTitle', lineStart: 50 },
          { name: 'ProfileSubtitle', lineStart: 51 },
          { name: 'ProfileBody', lineStart: 52 },
        ],
      },
      {
        name: 'RenderItemProps',
        lineStart: 55,
        children: [
          { name: 'disabled', lineStart: 56 },
          { name: 'ref', lineStart: 57 },
          { name: 'id', lineStart: 58 },
          { name: 'isFocused', lineStart: 59 },
          { name: 'isHighlighted', lineStart: 61 },
          { name: 'onClick', lineStart: 62 },
          { name: 'onMouseEnter', lineStart: 63 },
          { name: 'resetMenu', lineStart: 64 },
        ],
      },
      { name: 'GetRequiredItemPropsFn', lineStart: 67, children: [] },
      { name: 'StateReducerFn', lineStart: 69, children: [] },
      {
        name: 'StatefulContainerState',
        lineStart: 75,
        children: [
          { name: 'activedescendantId', lineStart: 77 },
          { name: 'highlightedIndex', lineStart: 79 },
          { name: 'isFocused', lineStart: 82 },
        ],
      },
      {
        name: 'InitialState',
        lineStart: 85,
        children: [
          { name: 'activedescendantId', lineStart: 87 },
          { name: 'highlightedIndex', lineStart: 89 },
          { name: 'isFocused', lineStart: 92 },
        ],
      },
      { name: 'RenderProps', lineStart: 95, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 107,
        children: [
          { name: 'items', lineStart: 109 },
          { name: 'initialState', lineStart: 111 },
          { name: 'stateReducer', lineStart: 113 },
          { name: 'getRequiredItemProps', lineStart: 117 },
          { name: 'onActiveDescendantChange', lineStart: 118 },
          { name: 'onItemSelect', lineStart: 120 },
          { name: 'rootRef', lineStart: 122 },
          { name: 'keyboardControlNode', lineStart: 124 },
          { name: 'typeAhead', lineStart: 128 },
          { name: 'children', lineStart: 130 },
          { name: 'addMenuToNesting', lineStart: 131 },
          { name: 'removeMenuFromNesting', lineStart: 132 },
          { name: 'getParentMenu', lineStart: 133 },
          { name: 'getChildMenu', lineStart: 139 },
          { name: 'nestedMenuHoverIndex', lineStart: 145 },
          { name: 'isNestedMenuVisible', lineStart: 146 },
          { name: 'forceHighlight', lineStart: 147 },
        ],
      },
      {
        name: 'MenuOverrides',
        lineStart: 150,
        children: [
          { name: 'EmptyState', lineStart: 151 },
          { name: 'List', lineStart: 152 },
          { name: 'Option', lineStart: 153 },
          { name: 'OptgroupHeader', lineStart: 154 },
          { name: 'ListItem', lineStart: 155 },
          { name: 'MenuDivider', lineStart: 156 },
        ],
      },
      {
        name: 'MenuProps',
        lineStart: 158,
        children: [
          { name: 'overrides', lineStart: 159 },
          { name: 'renderAll', lineStart: 161 },
        ],
      },
      {
        name: 'MenuProfileProps',
        lineStart: 164,
        children: [
          { name: 'getProfileItemLabels', lineStart: 166 },
          { name: 'getProfileItemImg', lineStart: 168 },
          { name: 'getProfileItemImgText', lineStart: 170 },
          { name: 'overrides', lineStart: 171 },
        ],
      },
      {
        name: 'SharedStatelessProps',
        lineStart: 174,
        children: [
          { name: 'activedescendantId', lineStart: 176 },
          { lineStart: 181 },
          { name: 'getRequiredItemProps', lineStart: 182 },
          { name: 'isFocused', lineStart: 183 },
          { name: 'handleMouseLeave', lineStart: 184 },
          { name: 'highlightedIndex', lineStart: 186 },
          { name: 'items', lineStart: 188 },
          { name: 'noResultsMsg', lineStart: 190 },
          { name: 'onBlur', lineStart: 191 },
          { name: 'onFocus', lineStart: 192 },
          { name: 'rootRef', lineStart: 194 },
          { name: 'focusMenu', lineStart: 195 },
          { name: 'unfocusMenu', lineStart: 196 },
          { name: 'handleKeyDown', lineStart: 197 },
        ],
      },
      { name: 'StatefulMenuProps', lineStart: 200, children: [] },
      { name: 'StatefulMenuProfileProps', lineStart: 238, children: [] },
      { name: 'StatelessMenuProps', lineStart: 240, children: [] },
      { name: 'StatelessMenuProfileProps', lineStart: 242, children: [] },
      {
        name: 'OptionListProps',
        lineStart: 244,
        children: [
          { name: 'item', lineStart: 246 },
          { name: 'getItemLabel', lineStart: 248 },
          { name: 'getChildMenu', lineStart: 250 },
          { name: 'onClick', lineStart: 251 },
          { name: 'onMouseDown', lineStart: 253 },
          { name: 'onMouseEnter', lineStart: 255 },
          { name: 'size', lineStart: 257 },
          { name: 'overrides', lineStart: 258 },
          { name: 'renderHrefAsAnchor', lineStart: 263 },
          { name: 'resetMenu', lineStart: 265 },
          { name: '$isHighlighted', lineStart: 267 },
          { name: '$isFocused', lineStart: 269 },
          { name: 'renderAll', lineStart: 271 },
          { name: '$disabled', lineStart: 273 },
          { lineStart: 275 },
          { lineStart: 277 },
          { name: 'id', lineStart: 279 },
          { name: 'role', lineStart: 281 },
        ],
      },
      {
        name: 'OptionProfileProps',
        lineStart: 284,
        children: [
          { name: 'item', lineStart: 286 },
          { name: 'getChildMenu', lineStart: 288 },
          { name: 'getProfileItemLabels', lineStart: 290 },
          { name: 'getProfileItemImg', lineStart: 292 },
          { name: 'getProfileItemImgText', lineStart: 294 },
          { name: 'overrides', lineStart: 295 },
          { name: 'resetMenu', lineStart: 306 },
          { name: '$isHighlighted', lineStart: 308 },
          { name: 'renderAll', lineStart: 310 },
        ],
      },
      { name: 'NestedMenuRef', lineStart: 313, children: [{ name: 'current', lineStart: 314 }] },
      {
        name: 'NestedMenuContextProps',
        lineStart: 316,
        children: [
          { name: 'addMenuToNesting', lineStart: 317 },
          { name: 'removeMenuFromNesting', lineStart: 318 },
          { name: 'getParentMenu', lineStart: 319 },
          { name: 'getChildMenu', lineStart: 320 },
          { name: 'nestedMenuHoverIndex', lineStart: 321 },
          { name: 'isNestedMenuVisible', lineStart: 322 },
          { name: 'mountRef', lineStart: 323 },
        ],
      },
    ],
  },
  {
    file: 'src/message-card/types.ts',
    definitions: [
      {
        name: 'MessageCardOverrides',
        lineStart: 11,
        children: [
          { name: 'Root', lineStart: 12 },
          { name: 'ContentContainer', lineStart: 13 },
          { name: 'HeadingContainer', lineStart: 14 },
          { name: 'ParagraphContainer', lineStart: 15 },
          { name: 'Button', lineStart: 16 },
          { name: 'Image', lineStart: 17 },
        ],
      },
    ],
  },
  {
    file: 'src/mobile-header/types.ts',
    definitions: [
      { name: 'Type', lineStart: 11, children: [] },
      {
        name: 'MobileHeaderOverrides',
        lineStart: 13,
        children: [
          { name: 'Root', lineStart: 14 },
          { name: 'Title', lineStart: 15 },
          { name: 'NavContainer', lineStart: 16 },
          { name: 'HeaderButton', lineStart: 17 },
          { name: 'ActionButtonsContainer', lineStart: 18 },
        ],
      },
      {
        name: 'IconButton',
        lineStart: 21,
        children: [
          { name: 'renderIcon', lineStart: 22 },
          { name: 'onClick', lineStart: 28 },
          { name: 'label', lineStart: 29 },
        ],
      },
      {
        name: 'MobileHeaderProps',
        lineStart: 32,
        children: [
          { name: 'title', lineStart: 33 },
          { name: 'expanded', lineStart: 34 },
          { name: 'navButton', lineStart: 35 },
          { name: 'actionButtons', lineStart: 36 },
          { name: 'type', lineStart: 37 },
          { name: 'overrides', lineStart: 38 },
        ],
      },
    ],
  },
  {
    file: 'src/modal/types.ts',
    definitions: [
      { name: 'Size', lineStart: 11, children: [] },
      { name: 'SizeProp', lineStart: 12, children: [] },
      { name: 'Role', lineStart: 14, children: [] },
      { name: 'RoleProp', lineStart: 15, children: [] },
      { name: 'CloseSource', lineStart: 17, children: [] },
      {
        name: 'ModalOverrides',
        lineStart: 19,
        children: [
          { name: 'Root', lineStart: 20 },
          { name: 'Dialog', lineStart: 21 },
          { name: 'DialogContainer', lineStart: 22 },
          { name: 'Close', lineStart: 23 },
        ],
      },
      {
        name: 'ModalProps',
        lineStart: 27,
        children: [
          { name: 'animate', lineStart: 29 },
          { name: 'autoFocus', lineStart: 34 },
          { name: 'focusLock', lineStart: 37 },
          { name: 'name', lineStart: 38 },
          { name: 'returnFocus', lineStart: 44 },
          { name: 'children', lineStart: 47 },
          { name: 'closeable', lineStart: 51 },
          { name: 'isOpen', lineStart: 52 },
          { name: 'mountNode', lineStart: 54 },
          { name: 'onClose', lineStart: 57 },
          { name: 'overrides', lineStart: 58 },
          { name: 'role', lineStart: 60 },
          { name: 'size', lineStart: 63 },
        ],
      },
      { name: 'ModalPropsWithoutChildren', lineStart: 66, children: [] },
      {
        name: 'ModalState',
        lineStart: 68,
        children: [
          { name: 'isVisible', lineStart: 69 },
          { name: 'mounted', lineStart: 70 },
          { name: 'isFocusVisible', lineStart: 71 },
        ],
      },
      {
        name: 'SharedStylePropsArg',
        lineStart: 74,
        children: [
          { name: '$animate', lineStart: 75 },
          { name: '$isVisible', lineStart: 76 },
          { name: '$isOpen', lineStart: 77 },
          { name: '$size', lineStart: 78 },
          { name: '$role', lineStart: 79 },
          { name: '$closeable', lineStart: 80 },
          { name: '$isFocusVisible', lineStart: 81 },
        ],
      },
    ],
  },
  {
    file: 'src/pagination/types.ts',
    definitions: [
      {
        name: 'Labels',
        lineStart: 11,
        children: [
          { name: 'prevButton', lineStart: 12 },
          { name: 'nextButton', lineStart: 13 },
          { name: 'preposition', lineStart: 14 },
        ],
      },
      { name: 'Size', lineStart: 17, children: [] },
      {
        name: 'Callbacks',
        lineStart: 19,
        children: [
          { name: 'onPrevClick', lineStart: 22 },
          { name: 'onNextClick', lineStart: 25 },
          { name: 'onPageChange', lineStart: 28 },
        ],
      },
      { name: 'StateReducerFn', lineStart: 31, children: [] },
      {
        name: 'PaginationOverrides',
        lineStart: 37,
        children: [
          { name: 'Root', lineStart: 38 },
          { name: 'PrevButton', lineStart: 39 },
          { name: 'NextButton', lineStart: 40 },
          { name: 'MaxLabel', lineStart: 41 },
          { name: 'DropdownContainer', lineStart: 42 },
          { name: 'Select', lineStart: 43 },
        ],
      },
      { name: 'PaginationProps', lineStart: 46, children: [] },
      { name: 'StatefulPaginationProps', lineStart: 57, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 70,
        children: [
          { name: 'children', lineStart: 72 },
          { name: 'numPages', lineStart: 73 },
          { name: 'stateReducer', lineStart: 75 },
          { name: 'initialState', lineStart: 77 },
          { name: 'onPageChange', lineStart: 79 },
        ],
      },
      {
        name: 'StatefulContainerState',
        lineStart: 82,
        children: [{ name: 'currentPage', lineStart: 83 }],
      },
    ],
  },
  {
    file: 'src/payment-card/types.ts',
    definitions: [
      { name: 'PaymentCardOverrides', lineStart: 10, children: [] },
      { name: 'PaymentCardProps', lineStart: 14, children: [] },
      { name: 'StatefulPaymentCardProps', lineStart: 18, children: [] },
    ],
  },
  {
    file: 'src/phone-input/types.ts',
    definitions: [
      { name: 'Size', lineStart: 12, children: [] },
      { name: 'CountryIso', lineStart: 13, children: [] },
      { name: 'Countries', lineStart: 14, children: [] },
      { name: 'Country', lineStart: 16, children: [] },
      {
        name: 'State',
        lineStart: 22,
        children: [
          { name: 'country', lineStart: 23 },
          { name: 'text', lineStart: 24 },
        ],
      },
      { name: 'StateChange', lineStart: 27, children: [] },
      { name: 'StateReducer', lineStart: 29, children: [] },
      { name: 'mapIsoToLabel', lineStart: 35, children: [] },
      {
        name: 'CountrySelectDropdownProps',
        lineStart: 39,
        children: [
          { name: 'children', lineStart: 41 },
          { name: '$country', lineStart: 42 },
          { name: '$mapIsoToLabel', lineStart: 43 },
          { name: '$maxDropdownHeight', lineStart: 44 },
          { name: '$noResultsMsg', lineStart: 45 },
          { name: '$overrides', lineStart: 46 },
        ],
      },
      {
        name: 'CountrySelectProps',
        lineStart: 58,
        children: [
          { name: 'countries', lineStart: 59 },
          { name: 'country', lineStart: 62 },
          { name: 'disabled', lineStart: 63 },
          { name: 'error', lineStart: 64 },
          { name: 'inputRef', lineStart: 65 },
          { name: 'onCountryChange', lineStart: 66 },
          { name: 'mapIsoToLabel', lineStart: 67 },
          { name: 'maxDropdownHeight', lineStart: 68 },
          { name: 'maxDropdownWidth', lineStart: 69 },
          { name: 'overrides', lineStart: 70 },
          { name: 'positive', lineStart: 81 },
          { name: 'required', lineStart: 82 },
          { name: 'size', lineStart: 83 },
        ],
      },
      {
        name: 'PhoneInputOverrides',
        lineStart: 86,
        children: [
          { name: 'Root', lineStart: 87 },
          { name: 'Input', lineStart: 88 },
          { name: 'CountrySelectContainer', lineStart: 89 },
          { name: 'CountrySelectDropdown', lineStart: 90 },
          { name: 'CountrySelectDropdownListItem', lineStart: 91 },
          { name: 'CountrySelectDropdownFlagColumn', lineStart: 92 },
          { name: 'CountrySelectDropdownNameColumn', lineStart: 93 },
          { name: 'CountrySelectDropdownDialcodeColumn', lineStart: 94 },
          { name: 'DialCode', lineStart: 95 },
          { name: 'CountrySelect', lineStart: 96 },
          { name: 'FlagContainer', lineStart: 97 },
        ],
      },
      {
        name: 'PhoneInputProps',
        lineStart: 99,
        children: [
          { lineStart: 101 },
          { lineStart: 103 },
          { lineStart: 105 },
          { name: 'country', lineStart: 107 },
          { name: 'disabled', lineStart: 109 },
          { name: 'error', lineStart: 111 },
          { name: 'id', lineStart: 113 },
          { name: 'maxDropdownHeight', lineStart: 115 },
          { name: 'maxDropdownWidth', lineStart: 117 },
          { name: 'mapIsoToLabel', lineStart: 119 },
          { name: 'name', lineStart: 121 },
          { name: 'onCountryChange', lineStart: 123 },
          { name: 'onTextChange', lineStart: 125 },
          { name: 'overrides', lineStart: 126 },
          { name: 'placeholder', lineStart: 128 },
          { name: 'positive', lineStart: 130 },
          { name: 'required', lineStart: 132 },
          { name: 'size', lineStart: 134 },
          { name: 'text', lineStart: 136 },
          { name: 'clearable', lineStart: 138 },
        ],
      },
      { name: 'PhoneInputLiteProps', lineStart: 141, children: [] },
      { name: 'StatefulPhoneInputContainerProps', lineStart: 147, children: [] },
      { name: 'StatefulPhoneInputProps', lineStart: 155, children: [] },
    ],
  },
  {
    file: 'src/pin-code/types.ts',
    definitions: [
      {
        name: 'ChangeEvent',
        lineStart: 11,
        children: [
          { name: 'values', lineStart: 12 },
          { name: 'event', lineStart: 14 },
        ],
      },
      {
        name: 'PinCodeOverrides',
        lineStart: 17,
        children: [
          { name: 'Root', lineStart: 18 },
          { name: 'Input', lineStart: 19 },
        ],
      },
      {
        name: 'PinCodeProps',
        lineStart: 21,
        children: [
          { lineStart: 23 },
          { lineStart: 25 },
          { lineStart: 27 },
          { name: 'autoComplete', lineStart: 29 },
          { name: 'autoFocus', lineStart: 31 },
          { name: 'disabled', lineStart: 33 },
          { name: 'error', lineStart: 35 },
          { name: 'id', lineStart: 37 },
          { name: 'name', lineStart: 39 },
          { name: 'onChange', lineStart: 41 },
          { name: 'overrides', lineStart: 42 },
          { name: 'placeholder', lineStart: 44 },
          { name: 'positive', lineStart: 46 },
          { name: 'required', lineStart: 48 },
          { name: 'size', lineStart: 50 },
          { name: 'manageFocus', lineStart: 52 },
          { name: 'values', lineStart: 54 },
          { name: 'mask', lineStart: 56 },
        ],
      },
      { name: 'State', lineStart: 61, children: [{ name: 'hasFocus', lineStart: 62 }] },
      {
        name: 'StatefulPinCodeContainerState',
        lineStart: 65,
        children: [{ name: 'values', lineStart: 66 }],
      },
      { name: 'StateChange', lineStart: 69, children: [] },
      { name: 'StateReducer', lineStart: 71, children: [] },
      { name: 'StatefulPinCodeProps', lineStart: 77, children: [] },
      { name: 'StatefulPinCodeContainerProps', lineStart: 83, children: [] },
    ],
  },
  {
    file: 'src/popover/types.ts',
    definitions: [
      { name: 'PopoverPlacement', lineStart: 14, children: [] },
      { name: 'TriggerType', lineStart: 15, children: [] },
      { name: 'AccessibilityType', lineStart: 16, children: [] },
      { name: 'State', lineStart: 18, children: [{ name: 'isOpen', lineStart: 19 }] },
      { name: 'StateChangeType', lineStart: 22, children: [] },
      { name: 'StateReducer', lineStart: 24, children: [] },
      { name: 'ContentRenderProp', lineStart: 30, children: [] },
      { name: 'StatefulContentRenderProp', lineStart: 32, children: [] },
      {
        name: 'PopoverOverrides',
        lineStart: 34,
        children: [
          { name: 'Body', lineStart: 35 },
          { name: 'Arrow', lineStart: 36 },
          { name: 'Inner', lineStart: 37 },
        ],
      },
      { name: 'Child', lineStart: 41, children: [] },
      { name: 'Children', lineStart: 42, children: [] },
      {
        name: 'BasePopoverProps',
        lineStart: 45,
        children: [
          { name: 'accessibilityType', lineStart: 49 },
          { name: 'animateOutTime', lineStart: 51 },
          { name: 'autoFocus', lineStart: 56 },
          { name: 'focusLock', lineStart: 59 },
          { lineStart: 60 },
          { name: 'id', lineStart: 61 },
          { name: 'ignoreBoundary', lineStart: 63 },
          { name: 'mountNode', lineStart: 65 },
          { name: 'onBlur', lineStart: 67 },
          { name: 'onClick', lineStart: 69 },
          { name: 'onFocus', lineStart: 71 },
          { name: 'focusOptions', lineStart: 73 },
          { name: 'onMouseEnter', lineStart: 75 },
          { name: 'onMouseEnterDelay', lineStart: 77 },
          { name: 'onMouseLeave', lineStart: 79 },
          { name: 'onMouseLeaveDelay', lineStart: 81 },
          { name: 'overrides', lineStart: 82 },
          { name: 'placement', lineStart: 84 },
          { name: 'popperOptions', lineStart: 89 },
          { name: 'renderAll', lineStart: 91 },
          { name: 'returnFocus', lineStart: 95 },
          { name: 'showArrow', lineStart: 97 },
          { name: 'triggerType', lineStart: 99 },
          { name: 'popoverMargin', lineStart: 101 },
        ],
      },
      { name: 'PopoverProps', lineStart: 105, children: [] },
      { name: 'StatefulPopoverProps', lineStart: 121, children: [] },
      { name: 'StatefulPopoverContainerProps', lineStart: 143, children: [] },
      { name: 'PopoverPropsWithoutChildren', lineStart: 147, children: [] },
      {
        name: 'Offset',
        lineStart: 149,
        children: [
          { name: 'top', lineStart: 150 },
          { name: 'left', lineStart: 151 },
        ],
      },
      {
        name: 'PopoverPrivateState',
        lineStart: 154,
        children: [
          { name: 'isAnimating', lineStart: 155 },
          { name: 'arrowOffset', lineStart: 156 },
          { name: 'popoverOffset', lineStart: 157 },
          { name: 'placement', lineStart: 158 },
          { name: 'isLayerMounted', lineStart: 159 },
          { name: 'isMounted', lineStart: 160 },
          { name: 'autoFocusAfterPositioning', lineStart: 161 },
        ],
      },
      {
        name: 'ArrowStylePropsArg',
        lineStart: 164,
        children: [
          { name: '$arrowOffset', lineStart: 165 },
          { name: '$placement', lineStart: 166 },
        ],
      },
      {
        name: 'BodyStylePropsArg',
        lineStart: 169,
        children: [
          { name: '$animationDuration', lineStart: 170 },
          { name: '$isAnimating', lineStart: 171 },
          { name: '$isHoverTrigger', lineStart: 172 },
          { name: '$isOpen', lineStart: 173 },
          { name: '$popoverOffset', lineStart: 174 },
          { name: '$placement', lineStart: 175 },
          { name: '$showArrow', lineStart: 176 },
          { name: '$popoverMargin', lineStart: 177 },
        ],
      },
      { name: 'InnerStylePropsArg', lineStart: 180, children: [] },
      { name: 'SharedStylePropsArg', lineStart: 185, children: [] },
      {
        name: 'AnchorProps',
        lineStart: 187,
        children: [
          { lineStart: 188 },
          { lineStart: 189 },
          { lineStart: 190 },
          { lineStart: 191 },
          { lineStart: 192 },
          { name: 'id', lineStart: 193 },
          { name: 'onBlur', lineStart: 194 },
          { name: 'onClick', lineStart: 195 },
          { name: 'onFocus', lineStart: 196 },
          { name: 'onMouseEnter', lineStart: 197 },
          { name: 'onMouseLeave', lineStart: 198 },
          { name: 'ref', lineStart: 199 },
          { name: 'tabIndex', lineStart: 200 },
        ],
      },
    ],
  },
  {
    file: 'src/progress-bar/types.ts',
    definitions: [
      { name: 'Size', lineStart: 11, children: [] },
      {
        name: 'ProgressBarOverrides',
        lineStart: 13,
        children: [
          { name: 'Root', lineStart: 14 },
          { name: 'BarContainer', lineStart: 15 },
          { name: 'Bar', lineStart: 16 },
          { name: 'BarProgress', lineStart: 17 },
          { name: 'InfiniteBar', lineStart: 18 },
          { name: 'Label', lineStart: 19 },
        ],
      },
      {
        name: 'ProgressBarProps',
        lineStart: 22,
        children: [
          { name: 'ariaLabel', lineStart: 24 },
          { lineStart: 25 },
          { name: 'children', lineStart: 26 },
          { name: 'errorMessage', lineStart: 28 },
          { name: 'getProgressLabel', lineStart: 30 },
          { name: 'infinite', lineStart: 32 },
          { name: 'overrides', lineStart: 33 },
          { name: 'showLabel', lineStart: 35 },
          { name: 'size', lineStart: 37 },
          { name: 'steps', lineStart: 39 },
          { name: 'successValue', lineStart: 41 },
          { name: 'maxValue', lineStart: 43 },
          { name: 'minValue', lineStart: 45 },
          { name: 'value', lineStart: 47 },
        ],
      },
      {
        name: 'StyleProps',
        lineStart: 50,
        children: [
          { name: '$infinite', lineStart: 51 },
          { name: '$index', lineStart: 52 },
          { name: '$size', lineStart: 53 },
          { name: '$steps', lineStart: 54 },
          { name: '$successValue', lineStart: 55 },
          { name: '$minValue', lineStart: 56 },
          { name: '$maxValue', lineStart: 57 },
          { name: '$value', lineStart: 58 },
        ],
      },
      {
        name: 'ProgressBarRoundedOverrides',
        lineStart: 61,
        children: [
          { name: 'Root', lineStart: 62 },
          { name: 'Svg', lineStart: 63 },
          { name: 'TrackBackground', lineStart: 64 },
          { name: 'TrackForeground', lineStart: 65 },
          { name: 'Text', lineStart: 66 },
        ],
      },
      {
        name: 'ProgressBarRoundedProps',
        lineStart: 69,
        children: [
          { name: 'progress', lineStart: 71 },
          { name: 'size', lineStart: 73 },
          { name: 'animate', lineStart: 75 },
          { name: 'inline', lineStart: 77 },
          { name: 'overrides', lineStart: 79 },
        ],
      },
    ],
  },
  {
    file: 'src/progress-steps/types.ts',
    definitions: [
      {
        name: 'ProgressStepsOverrides',
        lineStart: 11,
        children: [
          { name: 'Root', lineStart: 12 },
          { name: 'StepRoot', lineStart: 13 },
          { name: 'IconContainer', lineStart: 14 },
          { name: 'Icon', lineStart: 15 },
          { name: 'InnerIcon', lineStart: 16 },
          { name: 'Tail', lineStart: 17 },
          { name: 'Content', lineStart: 18 },
          { name: 'Title', lineStart: 19 },
          { name: 'Description', lineStart: 20 },
        ],
      },
      {
        name: 'ProgressStepsProps',
        lineStart: 23,
        children: [
          { name: 'overrides', lineStart: 24 },
          { name: 'children', lineStart: 25 },
          { name: 'current', lineStart: 27 },
        ],
      },
      {
        name: 'StepOverrides',
        lineStart: 30,
        children: [
          { name: 'Root', lineStart: 31 },
          { name: 'IconContainer', lineStart: 32 },
          { name: 'Icon', lineStart: 33 },
          { name: 'InnerIcon', lineStart: 34 },
          { name: 'Tail', lineStart: 35 },
          { name: 'Content', lineStart: 36 },
          { name: 'Title', lineStart: 37 },
          { name: 'Description', lineStart: 38 },
        ],
      },
      {
        name: 'StepProps',
        lineStart: 41,
        children: [
          { name: 'title', lineStart: 43 },
          { name: 'isCompleted', lineStart: 45 },
          { name: 'isActive', lineStart: 47 },
          { name: 'isLast', lineStart: 49 },
          { name: 'overrides', lineStart: 50 },
          { name: 'children', lineStart: 51 },
        ],
      },
      {
        name: 'NumberedStepOverrides',
        lineStart: 54,
        children: [
          { name: 'Root', lineStart: 55 },
          { name: 'IconContainer', lineStart: 56 },
          { name: 'Icon', lineStart: 57 },
          { name: 'InnerIcon', lineStart: 58 },
          { name: 'Tail', lineStart: 59 },
          { name: 'Content', lineStart: 60 },
          { name: 'Title', lineStart: 61 },
          { name: 'Description', lineStart: 62 },
        ],
      },
      {
        name: 'NumberedStepProps',
        lineStart: 65,
        children: [
          { name: 'title', lineStart: 67 },
          { name: 'isCompleted', lineStart: 69 },
          { name: 'isActive', lineStart: 71 },
          { name: 'isLast', lineStart: 73 },
          { name: 'overrides', lineStart: 74 },
          { name: 'children', lineStart: 75 },
          { name: 'step', lineStart: 77 },
        ],
      },
      {
        name: 'StyleProps',
        lineStart: 80,
        children: [
          { name: '$isActive', lineStart: 81 },
          { name: '$isCompleted', lineStart: 82 },
          { name: '$disabled', lineStart: 83 },
        ],
      },
    ],
  },
  {
    file: 'src/radio/types.ts',
    definitions: [
      { name: 'LabelPlacement', lineStart: 12, children: [] },
      { name: 'Align', lineStart: 13, children: [] },
      {
        name: 'RadioOverrides',
        lineStart: 15,
        children: [
          { name: 'RadioMarkInner', lineStart: 16 },
          { name: 'RadioMarkOuter', lineStart: 17 },
          { name: 'Label', lineStart: 18 },
          { name: 'Root', lineStart: 19 },
          { name: 'Input', lineStart: 20 },
          { name: 'Description', lineStart: 21 },
        ],
      },
      {
        name: 'RadioGroupOverrides',
        lineStart: 24,
        children: [{ name: 'RadioGroupRoot', lineStart: 25 }],
      },
      { name: 'DefaultProps', lineStart: 28, children: [] },
      {
        name: 'RadioGroupProps',
        lineStart: 30,
        children: [
          { lineStart: 32 },
          { lineStart: 34 },
          { lineStart: 39 },
          { lineStart: 44 },
          { name: 'overrides', lineStart: 46 },
          { name: 'children', lineStart: 48 },
          { name: 'value', lineStart: 50 },
          { name: 'disabled', lineStart: 52 },
          { name: 'required', lineStart: 54 },
          { name: 'error', lineStart: 56 },
          { name: 'autoFocus', lineStart: 58 },
          { name: 'align', lineStart: 60 },
          { name: 'name', lineStart: 62 },
          { name: 'labelPlacement', lineStart: 64 },
          { name: 'id', lineStart: 66 },
          { name: 'onChange', lineStart: 68 },
          { name: 'onMouseEnter', lineStart: 70 },
          { name: 'onMouseLeave', lineStart: 72 },
          { name: 'onFocus', lineStart: 74 },
          { name: 'onBlur', lineStart: 76 },
        ],
      },
      { name: 'State', lineStart: 79, children: [{ name: 'value', lineStart: 80 }] },
      {
        name: 'RadioProps',
        lineStart: 83,
        children: [
          { name: 'autoFocus', lineStart: 85 },
          { name: 'align', lineStart: 87 },
          { name: 'checked', lineStart: 89 },
          { name: 'children', lineStart: 91 },
          { name: 'containsInteractiveElement', lineStart: 93 },
          { name: 'description', lineStart: 95 },
          { name: 'disabled', lineStart: 97 },
          { name: 'inputRef', lineStart: 99 },
          { name: 'error', lineStart: 101 },
          { name: 'isFocused', lineStart: 103 },
          { name: 'isFocusVisible', lineStart: 105 },
          { name: 'labelPlacement', lineStart: 107 },
          { name: 'name', lineStart: 109 },
          { name: 'onBlur', lineStart: 111 },
          { name: 'onChange', lineStart: 113 },
          { name: 'onFocus', lineStart: 115 },
          { name: 'onMouseEnter', lineStart: 117 },
          { name: 'onMouseLeave', lineStart: 119 },
          { name: 'onMouseDown', lineStart: 121 },
          { name: 'onMouseUp', lineStart: 123 },
          { name: 'overrides', lineStart: 124 },
          { name: 'required', lineStart: 126 },
          { name: 'value', lineStart: 128 },
          { name: 'tabIndex', lineStart: 130 },
        ],
      },
      {
        name: 'RadioState',
        lineStart: 133,
        children: [
          { name: 'isActive', lineStart: 134 },
          { name: 'isHovered', lineStart: 135 },
        ],
      },
      { name: 'StateReducer', lineStart: 138, children: [] },
      {
        name: 'StatelessState',
        lineStart: 145,
        children: [
          { name: 'isFocusVisible', lineStart: 146 },
          { name: 'focusedRadioIndex', lineStart: 147 },
        ],
      },
      {
        name: 'DefaultStatefulProps',
        lineStart: 150,
        children: [
          { name: 'initialState', lineStart: 151 },
          { name: 'children', lineStart: 152 },
          { name: 'stateReducer', lineStart: 153 },
          { name: 'onChange', lineStart: 154 },
        ],
      },
      {
        name: 'StatefulContainerProps',
        lineStart: 157,
        children: [
          { name: 'overrides', lineStart: 158 },
          { name: 'children', lineStart: 160 },
          { name: 'initialState', lineStart: 162 },
          { name: 'stateReducer', lineStart: 164 },
          { name: 'onChange', lineStart: 166 },
          { name: 'autoFocus', lineStart: 168 },
        ],
      },
      {
        name: 'StatefulRadioGroupProps',
        lineStart: 171,
        children: [
          { name: 'overrides', lineStart: 172 },
          { name: 'children', lineStart: 174 },
          { name: 'initialState', lineStart: 176 },
          { name: 'autoFocus', lineStart: 178 },
          { name: 'onChange', lineStart: 180 },
        ],
      },
      {
        name: 'StyleProps',
        lineStart: 183,
        children: [
          { name: '$align', lineStart: 184 },
          { name: '$checked', lineStart: 185 },
          { name: '$disabled', lineStart: 186 },
          { name: '$hasDescription', lineStart: 187 },
          { name: '$isActive', lineStart: 188 },
          { name: '$error', lineStart: 189 },
          { name: '$isFocused', lineStart: 190 },
          { name: '$isFocusVisible', lineStart: 191 },
          { name: '$isHovered', lineStart: 192 },
          { name: '$labelPlacement', lineStart: 193 },
          { name: '$required', lineStart: 194 },
          { name: '$value', lineStart: 195 },
        ],
      },
    ],
  },
  {
    file: 'src/rating/types.ts',
    definitions: [
      {
        name: 'RatingOverrides',
        lineStart: 10,
        children: [
          { name: 'Root', lineStart: 11 },
          { name: 'Item', lineStart: 12 },
        ],
      },
      {
        name: 'StarRatingProps',
        lineStart: 15,
        children: [
          { name: 'overrides', lineStart: 16 },
          { name: 'value', lineStart: 18 },
          { name: 'numItems', lineStart: 20 },
          { name: 'readOnly', lineStart: 21 },
          { name: 'onChange', lineStart: 23 },
          { name: 'size', lineStart: 24 },
        ],
      },
      {
        name: 'EmoticonRatingProps',
        lineStart: 27,
        children: [
          { name: 'overrides', lineStart: 28 },
          { name: 'value', lineStart: 30 },
          { name: 'readOnly', lineStart: 31 },
          { name: 'onChange', lineStart: 33 },
          { name: 'size', lineStart: 34 },
        ],
      },
      {
        name: 'RatingState',
        lineStart: 37,
        children: [
          { name: 'previewIndex', lineStart: 38 },
          { name: 'isFocusVisible', lineStart: 39 },
        ],
      },
      { name: 'StyledRootProps', lineStart: 42, children: [{ name: '$theme', lineStart: 43 }] },
      {
        name: 'StyledRatingItemProps',
        lineStart: 46,
        children: [
          { name: '$theme', lineStart: 47 },
          { name: '$isActive', lineStart: 48 },
          { name: '$isPartialActive', lineStart: 49 },
          { name: '$isSelected', lineStart: 50 },
          { name: '$isFocusVisible', lineStart: 51 },
          { name: '$isReadOnly', lineStart: 52 },
          { name: '$index', lineStart: 53 },
          { name: '$size', lineStart: 54 },
        ],
      },
    ],
  },
  {
    file: 'src/select/types.ts',
    definitions: [
      { name: 'ChangeAction', lineStart: 13, children: [] },
      { name: 'Size', lineStart: 14, children: [] },
      { name: 'Type', lineStart: 15, children: [] },
      { name: 'Option', lineStart: 17, children: [] },
      { name: 'Value', lineStart: 30, children: [] },
      {
        name: 'Optgroups',
        lineStart: 31,
        children: [
          { name: '__ungrouped', lineStart: 32 },
          { name: 'index', lineStart: 33 },
        ],
      },
      { name: 'Options', lineStart: 35, children: [] },
      {
        name: 'OnChangeParams',
        lineStart: 37,
        children: [
          { name: 'value', lineStart: 38 },
          { name: 'option', lineStart: 39 },
          { name: 'type', lineStart: 40 },
        ],
      },
      {
        name: 'SelectOverrides',
        lineStart: 43,
        children: [
          { name: 'Root', lineStart: 44 },
          { name: 'ControlContainer', lineStart: 45 },
          { name: 'Placeholder', lineStart: 46 },
          { name: 'ValueContainer', lineStart: 47 },
          { name: 'SingleValue', lineStart: 48 },
          { name: 'MultiValue', lineStart: 49 },
          { name: 'Tag', lineStart: 50 },
          { name: 'InputContainer', lineStart: 51 },
          { name: 'Input', lineStart: 52 },
          { name: 'IconsContainer', lineStart: 53 },
          { name: 'SelectArrow', lineStart: 54 },
          { name: 'ClearIcon', lineStart: 55 },
          { name: 'LoadingIndicator', lineStart: 56 },
          { name: 'SearchIconContainer', lineStart: 57 },
          { name: 'SearchIcon', lineStart: 58 },
          { name: 'Popover', lineStart: 59 },
          { name: 'DropdownContainer', lineStart: 60 },
          { name: 'Dropdown', lineStart: 61 },
          { name: 'DropdownOption', lineStart: 62 },
          { name: 'DropdownListItem', lineStart: 63 },
          { name: 'OptionContent', lineStart: 64 },
          { name: 'StatefulMenu', lineStart: 65 },
          { name: 'StyledClearIcon', lineStart: 66 },
        ],
      },
      {
        name: 'OverridesDropdown',
        lineStart: 69,
        children: [
          { name: 'DropdownContainer', lineStart: 70 },
          { name: 'Dropdown', lineStart: 71 },
          { name: 'DropdownOption', lineStart: 73 },
          { name: 'DropdownListItem', lineStart: 74 },
          { name: 'OptionContent', lineStart: 75 },
          { name: 'StatefulMenu', lineStart: 76 },
        ],
      },
      {
        name: 'ImperativeMethods',
        lineStart: 79,
        children: [
          { name: 'setDropdownOpen', lineStart: 80 },
          { name: 'setInputValue', lineStart: 81 },
          { name: 'setInputFocus', lineStart: 82 },
          { name: 'setInputBlur', lineStart: 83 },
          { name: 'focus', lineStart: 85 },
          { name: 'blur', lineStart: 86 },
        ],
      },
      { name: 'ControlRef', lineStart: 89, children: [{ name: 'current', lineStart: 90 }] },
      {
        name: 'SelectProps',
        lineStart: 93,
        children: [
          { lineStart: 94 },
          { lineStart: 95 },
          { lineStart: 96 },
          { lineStart: 97 },
          { name: 'autoFocus', lineStart: 99 },
          { name: 'backspaceRemoves', lineStart: 101 },
          { name: 'backspaceClearsInputValue', lineStart: 103 },
          { name: 'clearable', lineStart: 105 },
          { name: 'closeOnSelect', lineStart: 107 },
          { name: 'creatable', lineStart: 109 },
          { name: 'deleteRemoves', lineStart: 111 },
          { name: 'disabled', lineStart: 113 },
          { name: 'error', lineStart: 115 },
          { name: 'positive', lineStart: 117 },
          { name: 'escapeClearsValue', lineStart: 119 },
          { name: 'filterOptions', lineStart: 122 },
          { name: 'filterOutSelected', lineStart: 134 },
          { name: 'getOptionLabel', lineStart: 136 },
          { name: 'getValueLabel', lineStart: 147 },
          { name: 'id', lineStart: 149 },
          { name: 'ignoreCase', lineStart: 151 },
          { name: 'inputRef', lineStart: 152 },
          { name: 'controlRef', lineStart: 154 },
          { name: 'isLoading', lineStart: 156 },
          { name: 'labelKey', lineStart: 158 },
          { name: 'maxDropdownHeight', lineStart: 160 },
          { name: 'multi', lineStart: 162 },
          { name: 'noResultsMsg', lineStart: 164 },
          { name: 'onBlur', lineStart: 165 },
          { name: 'onBlurResetsInput', lineStart: 167 },
          { name: 'onChange', lineStart: 169 },
          { name: 'onFocus', lineStart: 170 },
          { name: 'onInputChange', lineStart: 171 },
          { name: 'onCloseResetsInput', lineStart: 173 },
          { name: 'onSelectResetsInput', lineStart: 175 },
          { name: 'onOpen', lineStart: 177 },
          { name: 'onClose', lineStart: 179 },
          { name: 'openOnClick', lineStart: 181 },
          { name: 'startOpen', lineStart: 183 },
          { name: 'options', lineStart: 186 },
          { name: 'overrides', lineStart: 187 },
          { name: 'placeholder', lineStart: 189 },
          { name: 'required', lineStart: 191 },
          { name: 'searchable', lineStart: 193 },
          { name: 'size', lineStart: 195 },
          { name: 'type', lineStart: 199 },
          { name: 'value', lineStart: 202 },
          { name: 'valueComponent', lineStart: 204 },
          { name: 'valueKey', lineStart: 209 },
          { name: 'mountNode', lineStart: 211 },
        ],
      },
      {
        name: 'SelectState',
        lineStart: 214,
        children: [
          { name: 'activeDescendant', lineStart: 215 },
          { name: 'inputValue', lineStart: 216 },
          { name: 'isFocused', lineStart: 217 },
          { name: 'isOpen', lineStart: 218 },
          { name: 'isPseudoFocused', lineStart: 219 },
        ],
      },
      { name: 'State', lineStart: 222, children: [{ name: 'value', lineStart: 223 }] },
      { name: 'StateReducer', lineStart: 226, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 228,
        children: [
          { name: 'overrides', lineStart: 229 },
          { name: 'children', lineStart: 230 },
          { name: 'initialState', lineStart: 231 },
          { name: 'stateReducer', lineStart: 232 },
          { name: 'onChange', lineStart: 233 },
        ],
      },
      { name: 'StatefulSelectProps', lineStart: 236, children: [] },
      {
        name: 'DropdownProps',
        lineStart: 246,
        children: [
          { name: 'error', lineStart: 247 },
          { name: 'getOptionLabel', lineStart: 248 },
          { name: 'id', lineStart: 256 },
          { name: 'innerRef', lineStart: 257 },
          { name: 'isLoading', lineStart: 258 },
          { name: 'labelKey', lineStart: 259 },
          { name: 'maxDropdownHeight', lineStart: 260 },
          { name: 'multi', lineStart: 261 },
          { name: 'noResultsMsg', lineStart: 262 },
          { name: 'onActiveDescendantChange', lineStart: 263 },
          { name: 'onItemSelect', lineStart: 264 },
          { name: 'options', lineStart: 265 },
          { name: 'overrides', lineStart: 266 },
          { name: 'required', lineStart: 267 },
          { name: 'searchable', lineStart: 268 },
          { name: 'size', lineStart: 269 },
          { name: 'type', lineStart: 270 },
          { name: 'value', lineStart: 271 },
          { name: 'valueKey', lineStart: 272 },
          { name: 'width', lineStart: 273 },
          { name: 'keyboardControlNode', lineStart: 274 },
        ],
      },
      {
        name: 'AutosizeInputOverrides',
        lineStart: 277,
        children: [{ name: 'Input', lineStart: 278 }],
      },
      {
        name: 'AutosizeInputProps',
        lineStart: 281,
        children: [
          { name: 'value', lineStart: 282 },
          { name: 'defaultValue', lineStart: 283 },
          { name: 'inputRef', lineStart: 285 },
          { name: 'overrides', lineStart: 286 },
          { name: '$size', lineStart: 287 },
        ],
      },
      {
        name: 'AutosizeInputState',
        lineStart: 290,
        children: [{ name: 'inputWidth', lineStart: 291 }],
      },
      {
        name: 'SharedStylePropsArg',
        lineStart: 294,
        children: [
          { name: '$clearable', lineStart: 295 },
          { name: '$creatable', lineStart: 296 },
          { name: '$disabled', lineStart: 297 },
          { name: '$error', lineStart: 298 },
          { name: '$positive', lineStart: 299 },
          { name: '$isFocused', lineStart: 300 },
          { name: '$isLoading', lineStart: 301 },
          { name: '$isOpen', lineStart: 302 },
          { name: '$isPseudoFocused', lineStart: 303 },
          { name: '$multi', lineStart: 304 },
          { name: '$required', lineStart: 305 },
          { name: '$searchable', lineStart: 306 },
          { name: '$size', lineStart: 307 },
          { name: '$type', lineStart: 308 },
          { name: '$width', lineStart: 309 },
          { name: '$maxHeight', lineStart: 310 },
          { name: '$isHighlighted', lineStart: 311 },
          { name: '$selected', lineStart: 312 },
          { name: '$isEmpty', lineStart: 313 },
        ],
      },
    ],
  },
  {
    file: 'src/side-navigation/types.ts',
    definitions: [
      { name: 'StateType', lineStart: 12, children: [] },
      { name: 'State', lineStart: 14, children: [{ name: 'activeItemId', lineStart: 15 }] },
      { name: 'StateReducer', lineStart: 18, children: [] },
      {
        name: 'SharedProps',
        lineStart: 20,
        children: [
          { name: '$active', lineStart: 22 },
          { name: '$level', lineStart: 24 },
          { name: '$selectable', lineStart: 26 },
          { name: '$disabled', lineStart: 28 },
        ],
      },
      {
        name: 'NavigationOverrides',
        lineStart: 31,
        children: [
          { name: 'Root', lineStart: 32 },
          { name: 'NavItemContainer', lineStart: 33 },
          { name: 'NavLink', lineStart: 34 },
          { name: 'NavItem', lineStart: 35 },
          { name: 'SubNavContainer', lineStart: 36 },
        ],
      },
      {
        name: 'NavigationProps',
        lineStart: 38,
        children: [
          { name: 'activeItemId', lineStart: 40 },
          { name: 'activePredicate', lineStart: 45 },
          { name: 'items', lineStart: 47 },
          { name: 'itemMemoizationComparator', lineStart: 51 },
          { name: 'onChange', lineStart: 53 },
          { name: 'overrides', lineStart: 55 },
          { name: 'mapItem', lineStart: 57 },
        ],
      },
      {
        name: 'Item',
        lineStart: 60,
        children: [
          { name: 'title', lineStart: 62 },
          { name: 'itemId', lineStart: 69 },
          { name: 'subNav', lineStart: 71 },
          { name: 'disabled', lineStart: 73 },
        ],
      },
      {
        name: 'NavItemOverrides',
        lineStart: 76,
        children: [
          { name: 'NavLink', lineStart: 77 },
          { name: 'NavItem', lineStart: 78 },
        ],
      },
      { name: 'NavItemProps', lineStart: 80, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 90,
        children: [
          { name: 'children', lineStart: 91 },
          { name: 'initialState', lineStart: 93 },
          { name: 'stateReducer', lineStart: 95 },
          { name: 'onChange', lineStart: 96 },
        ],
      },
      { name: 'StatefulNavProps', lineStart: 103, children: [] },
    ],
  },
  {
    file: 'src/skeleton/types.ts',
    definitions: [
      {
        name: 'SkeletonOverrides',
        lineStart: 9,
        children: [
          { name: 'Row', lineStart: 10 },
          { name: 'Root', lineStart: 11 },
        ],
      },
      {
        name: 'SkeletonProps',
        lineStart: 14,
        children: [
          { name: 'overrides', lineStart: 15 },
          { name: 'rows', lineStart: 17 },
          { name: 'animation', lineStart: 19 },
          { name: 'height', lineStart: 21 },
          { name: 'width', lineStart: 23 },
        ],
      },
    ],
  },
  {
    file: 'src/slider/types.ts',
    definitions: [
      { name: 'ChangeAction', lineStart: 12, children: [] },
      { name: 'Params', lineStart: 13, children: [{ name: 'value', lineStart: 14 }] },
      {
        name: 'SliderOverrides',
        lineStart: 16,
        children: [
          { name: 'Root', lineStart: 17 },
          { name: 'Track', lineStart: 18 },
          { name: 'InnerTrack', lineStart: 19 },
          { name: 'Tick', lineStart: 20 },
          { name: 'TickBar', lineStart: 21 },
          { name: 'Thumb', lineStart: 22 },
          { name: 'InnerThumb', lineStart: 23 },
          { name: 'ThumbValue', lineStart: 24 },
          { name: 'Mark', lineStart: 25 },
        ],
      },
      {
        name: 'SliderProps',
        lineStart: 28,
        children: [
          { name: 'value', lineStart: 30 },
          { name: 'min', lineStart: 32 },
          { name: 'max', lineStart: 34 },
          { name: 'step', lineStart: 36 },
          { name: 'overrides', lineStart: 37 },
          { name: 'disabled', lineStart: 39 },
          { name: 'marks', lineStart: 41 },
          { name: 'persistentThumb', lineStart: 43 },
          { name: 'valueToLabel', lineStart: 45 },
          { name: 'onChange', lineStart: 47 },
          { name: 'onFinalChange', lineStart: 49 },
        ],
      },
      { name: 'State', lineStart: 52, children: [{ name: 'value', lineStart: 53 }] },
      { name: 'StateReducer', lineStart: 56, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 58,
        children: [
          { name: 'overrides', lineStart: 59 },
          { name: 'children', lineStart: 60 },
          { name: 'min', lineStart: 61 },
          { name: 'max', lineStart: 62 },
          { name: 'step', lineStart: 63 },
          { name: 'initialState', lineStart: 65 },
          { name: 'stateReducer', lineStart: 67 },
          { name: 'onChange', lineStart: 69 },
          { name: 'onFinalChange', lineStart: 71 },
        ],
      },
      { name: 'StatefulSliderProps', lineStart: 74, children: [] },
      {
        name: 'StyleProps',
        lineStart: 79,
        children: [
          { name: '$disabled', lineStart: 80 },
          { name: '$isDragged', lineStart: 81 },
          { name: '$marks', lineStart: 82 },
          { name: '$max', lineStart: 83 },
          { name: '$min', lineStart: 84 },
          { name: '$thumbIndex', lineStart: 85 },
          { name: '$value', lineStart: 86 },
          { name: '$isFocusVisible', lineStart: 87 },
        ],
      },
    ],
  },
  {
    file: 'src/snackbar/types.ts',
    definitions: [
      { name: 'Duration', lineStart: 14, children: [] },
      { name: 'Placement', lineStart: 20, children: [] },
      {
        name: 'SnackbarElementOverrides',
        lineStart: 28,
        children: [
          { name: 'Root', lineStart: 29 },
          { name: 'Content', lineStart: 30 },
          { name: 'StartEnhancerContainer', lineStart: 31 },
          { name: 'Spinner', lineStart: 32 },
          { name: 'Message', lineStart: 33 },
          { name: 'WrapActionButtonContainer', lineStart: 34 },
          { name: 'ActionButtonContainer', lineStart: 35 },
        ],
      },
      {
        name: 'SnackbarElementProps',
        lineStart: 38,
        children: [
          { name: 'actionMessage', lineStart: 40 },
          { name: 'actionOnClick', lineStart: 42 },
          { name: 'focus', lineStart: 44 },
          { name: 'message', lineStart: 46 },
          { name: 'overrides', lineStart: 47 },
          { name: 'progress', lineStart: 49 },
          { name: 'startEnhancer', lineStart: 51 },
        ],
      },
      {
        name: 'SnackbarProviderProps',
        lineStart: 56,
        children: [
          { name: 'children', lineStart: 57 },
          { name: 'overrides', lineStart: 58 },
          { name: 'placement', lineStart: 62 },
          { name: 'defaultDuration', lineStart: 64 },
        ],
      },
    ],
  },
  {
    file: 'src/spinner/types.ts',
    definitions: [
      { name: 'Size', lineStart: 10, children: [] },
      {
        name: 'SpinnerProps',
        lineStart: 12,
        children: [
          { name: '$color', lineStart: 14 },
          { name: '$borderWidth', lineStart: 16 },
          { name: '$size', lineStart: 18 },
        ],
      },
    ],
  },
  {
    file: 'src/stepper/types.ts',
    definitions: [
      {
        name: 'MobileHeaderOverrides',
        lineStart: 10,
        children: [
          { name: 'Root', lineStart: 11 },
          { name: 'Input', lineStart: 12 },
          { name: 'DecrementButton', lineStart: 13 },
          { name: 'DecrementButtonIcon', lineStart: 14 },
          { name: 'IncrementButton', lineStart: 15 },
          { name: 'IncrementButtonIcon', lineStart: 16 },
        ],
      },
      {
        name: 'StepperProps',
        lineStart: 19,
        children: [
          { name: 'value', lineStart: 20 },
          { name: 'setValue', lineStart: 21 },
          { name: 'minValue', lineStart: 22 },
          { name: 'maxValue', lineStart: 23 },
          { name: 'disabled', lineStart: 24 },
          { name: 'overrides', lineStart: 25 },
        ],
      },
    ],
  },
  {
    file: 'src/styles/types.ts',
    definitions: [
      { name: 'Colors', lineStart: 41, children: [] },
      {
        name: 'Theme',
        lineStart: 43,
        children: [
          { name: 'name', lineStart: 44 },
          { name: 'animation', lineStart: 45 },
          { name: 'borders', lineStart: 46 },
          { name: 'breakpoints', lineStart: 47 },
          { name: 'colors', lineStart: 48 },
          { name: 'direction', lineStart: 49 },
          { name: 'grid', lineStart: 50 },
          { name: 'icons', lineStart: 51 },
          { name: 'lighting', lineStart: 52 },
          { name: 'mediaQuery', lineStart: 53 },
          { name: 'sizing', lineStart: 54 },
          { name: 'typography', lineStart: 55 },
          { name: 'zIndex', lineStart: 56 },
        ],
      },
      {
        name: 'Icon',
        lineStart: 59,
        children: [
          { name: 'Alert', lineStart: 60 },
          { name: 'ArrowDown', lineStart: 61 },
          { name: 'ArrowLeft', lineStart: 62 },
          { name: 'ArrowRight', lineStart: 63 },
          { name: 'ArrowUp', lineStart: 64 },
          { name: 'Blank', lineStart: 65 },
          { name: 'CheckIndeterminate', lineStart: 66 },
          { name: 'Check', lineStart: 67 },
          { name: 'ChevronDown', lineStart: 68 },
          { name: 'ChevronUp', lineStart: 69 },
          { name: 'ChevronLeft', lineStart: 70 },
          { name: 'ChevronRight', lineStart: 71 },
          { name: 'DeleteAlt', lineStart: 72 },
          { name: 'Delete', lineStart: 73 },
          { name: 'Filter', lineStart: 74 },
          { name: 'Grab', lineStart: 75 },
          { name: 'Hide', lineStart: 76 },
          { name: 'Menu', lineStart: 77 },
          { name: 'Overflow', lineStart: 78 },
          { name: 'Plus', lineStart: 79 },
          { name: 'Search', lineStart: 80 },
          { name: 'Show', lineStart: 81 },
          { name: 'Spinner', lineStart: 82 },
          { name: 'TriangleDown', lineStart: 83 },
          { name: 'TriangleLeft', lineStart: 84 },
          { name: 'TriangleRight', lineStart: 85 },
          { name: 'TriangleUp', lineStart: 86 },
          { name: 'Upload', lineStart: 87 },
        ],
      },
    ],
  },
  {
    file: 'src/table/types.ts',
    definitions: [
      { name: 'SortDirection', lineStart: 12, children: [] },
      {
        name: 'HeadCellOverrides',
        lineStart: 14,
        children: [
          { name: 'HeadCell', lineStart: 15 },
          { name: 'SortableLabel', lineStart: 16 },
        ],
      },
      {
        name: 'HeadCellProps',
        lineStart: 18,
        children: [
          { name: 'ariaLabel', lineStart: 20 },
          { lineStart: 21 },
          { name: 'children', lineStart: 23 },
          { name: 'direction', lineStart: 25 },
          { name: 'disabled', lineStart: 27 },
          { name: 'onSort', lineStart: 29 },
          { name: 'overrides', lineStart: 30 },
          { name: 'title', lineStart: 32 },
          { name: 'fillClickTarget', lineStart: 34 },
        ],
      },
      {
        name: 'TableProps',
        lineStart: 37,
        children: [
          { name: 'columns', lineStart: 39 },
          { name: 'data', lineStart: 41 },
          { name: 'horizontalScrollWidth', lineStart: 43 },
          { name: 'isLoading', lineStart: 45 },
        ],
      },
      {
        name: 'FilterOverrides',
        lineStart: 48,
        children: [
          { name: 'MenuButton', lineStart: 49 },
          { name: 'Content', lineStart: 50 },
          { name: 'Heading', lineStart: 51 },
          { name: 'Footer', lineStart: 52 },
        ],
      },
      {
        name: 'FilterProps',
        lineStart: 54,
        children: [
          { name: 'active', lineStart: 56 },
          { name: 'children', lineStart: 60 },
          { name: 'disabled', lineStart: 62 },
          { name: 'hasCloseButton', lineStart: 64 },
          { name: 'onClose', lineStart: 66 },
          { name: 'onOpen', lineStart: 68 },
          { name: 'onReset', lineStart: 70 },
          { name: 'onSelectAll', lineStart: 72 },
          { name: 'overrides', lineStart: 73 },
          { name: 'returnFocus', lineStart: 75 },
        ],
      },
    ],
  },
  {
    file: 'src/table-semantic/types.ts',
    definitions: [
      { name: 'Size', lineStart: 12, children: [] },
      { name: 'Divider', lineStart: 13, children: [] },
      {
        name: 'TableOverrides',
        lineStart: 15,
        children: [
          { name: 'Root', lineStart: 16 },
          { name: 'Table', lineStart: 17 },
          { name: 'TableHead', lineStart: 18 },
          { name: 'TableHeadRow', lineStart: 19 },
          { name: 'TableHeadCell', lineStart: 20 },
          { name: 'TableBody', lineStart: 21 },
          { name: 'TableBodyRow', lineStart: 22 },
          { name: 'TableBodyCell', lineStart: 23 },
          { name: 'TableLoadingMessage', lineStart: 24 },
          { name: 'TableEmptyMessage', lineStart: 25 },
        ],
      },
      {
        name: 'TableProps',
        lineStart: 28,
        children: [
          { name: 'overrides', lineStart: 29 },
          { name: 'columns', lineStart: 30 },
          { name: 'data', lineStart: 31 },
          { name: 'divider', lineStart: 32 },
          { name: 'horizontalScrollWidth', lineStart: 33 },
          { name: 'isLoading', lineStart: 34 },
          { name: 'loadingMessage', lineStart: 35 },
          { name: 'emptyMessage', lineStart: 36 },
          { name: 'size', lineStart: 37 },
        ],
      },
      { name: 'BuilderOverrides', lineStart: 40, children: [] },
      {
        name: 'TableBuilderProps',
        lineStart: 48,
        children: [
          { name: 'overrides', lineStart: 49 },
          { name: 'children', lineStart: 50 },
          { name: 'data', lineStart: 51 },
          { name: 'divider', lineStart: 52 },
          { name: 'horizontalScrollWidth', lineStart: 53 },
          { name: 'sortColumn', lineStart: 54 },
          { name: 'sortOrder', lineStart: 55 },
          { name: 'onSort', lineStart: 56 },
          { name: 'isLoading', lineStart: 57 },
          { name: 'loadingMessage', lineStart: 58 },
          { name: 'emptyMessage', lineStart: 59 },
          { name: 'size', lineStart: 60 },
        ],
      },
      {
        name: 'ColumnOverrides',
        lineStart: 63,
        children: [
          { name: 'TableHeadCell', lineStart: 64 },
          { name: 'TableHeadCellSortable', lineStart: 65 },
          { name: 'TableBodyCell', lineStart: 66 },
          { name: 'SortAscIcon', lineStart: 67 },
          { name: 'SortDescIcon', lineStart: 68 },
          { name: 'SortNoneIcon', lineStart: 69 },
        ],
      },
      {
        name: 'TableBuilderColumnProps',
        lineStart: 72,
        children: [
          { name: 'overrides', lineStart: 73 },
          { name: 'children', lineStart: 74 },
          { name: 'id', lineStart: 75 },
          { name: 'header', lineStart: 76 },
          { name: 'numeric', lineStart: 77 },
          { name: 'sortable', lineStart: 78 },
          { name: 'tableHeadAriaLabel', lineStart: 79 },
        ],
      },
    ],
  },
  {
    file: 'src/tabs/types.ts',
    definitions: [
      {
        name: 'SharedStylePropsArg',
        lineStart: 11,
        children: [
          { name: '$disabled', lineStart: 12 },
          { name: '$active', lineStart: 13 },
          { name: '$orientation', lineStart: 14 },
          { name: '$isFocusVisible', lineStart: 15 },
        ],
      },
      {
        name: 'StatefulTabsState',
        lineStart: 18,
        children: [{ name: 'activeKey', lineStart: 19 }],
      },
      { name: 'StateChangeType', lineStart: 22, children: [] },
      { name: 'StateReducer', lineStart: 24, children: [] },
      {
        name: 'TabsOverrides',
        lineStart: 30,
        children: [
          { name: 'Root', lineStart: 31 },
          { name: 'TabBar', lineStart: 32 },
          { name: 'TabContent', lineStart: 33 },
          { name: 'Tab', lineStart: 34 },
        ],
      },
      { name: 'TabOverrides', lineStart: 37, children: [{ name: 'Tab', lineStart: 38 }] },
      { name: 'OnChangeHandler', lineStart: 41, children: [] },
      {
        name: 'TabsProps',
        lineStart: 43,
        children: [
          { name: 'children', lineStart: 46 },
          { name: 'activeKey', lineStart: 48 },
          { name: 'disabled', lineStart: 50 },
          { name: 'onChange', lineStart: 52 },
          { name: 'orientation', lineStart: 54 },
          { name: 'renderAll', lineStart: 56 },
          { name: 'overrides', lineStart: 57 },
        ],
      },
      { name: 'StatefulTabsProps', lineStart: 60, children: [] },
      {
        name: 'TabPanelProps',
        lineStart: 67,
        children: [
          { name: 'children', lineStart: 68 },
          { name: 'disabled', lineStart: 70 },
          { name: 'active', lineStart: 71 },
          { name: 'key', lineStart: 73 },
          { name: 'onClick', lineStart: 75 },
          { name: 'onKeyDown', lineStart: 77 },
          { name: 'onSelect', lineStart: 79 },
          { name: 'overrides', lineStart: 80 },
          { name: 'title', lineStart: 82 },
        ],
      },
      { name: 'TabProps', lineStart: 85, children: [] },
    ],
  },
  {
    file: 'src/tabs-motion/types.ts',
    definitions: [
      { name: 'Orientation', lineStart: 14, children: [] },
      { name: 'Fill', lineStart: 15, children: [] },
      { name: 'StateChange', lineStart: 16, children: [] },
      {
        name: 'TabsOverrides',
        lineStart: 18,
        children: [
          { name: 'Root', lineStart: 19 },
          { name: 'TabList', lineStart: 20 },
          { name: 'TabHighlight', lineStart: 21 },
          { name: 'TabBorder', lineStart: 22 },
          { name: 'EndEnhancerContainer', lineStart: 23 },
          { name: 'TabBar', lineStart: 24 },
        ],
      },
      {
        name: 'TabOverrides',
        lineStart: 27,
        children: [
          { name: 'Tab', lineStart: 28 },
          { name: 'ArtworkContainer', lineStart: 29 },
          { name: 'TabPanel', lineStart: 30 },
        ],
      },
      {
        name: 'StatefulTabsState',
        lineStart: 33,
        children: [{ name: 'activeKey', lineStart: 34 }],
      },
      {
        name: 'StatefulTabsAction',
        lineStart: 37,
        children: [
          { name: 'type', lineStart: 38 },
          { name: 'payload', lineStart: 39 },
        ],
      },
      { name: 'StatefulTabsReducer', lineStart: 42, children: [] },
      { name: 'onChange', lineStart: 47, children: [] },
      {
        name: 'TabsProps',
        lineStart: 49,
        children: [
          { name: 'children', lineStart: 50 },
          { name: 'activeKey', lineStart: 51 },
          { name: 'disabled', lineStart: 52 },
          { name: 'fill', lineStart: 53 },
          { name: 'orientation', lineStart: 54 },
          { name: 'activateOnFocus', lineStart: 55 },
          { name: 'onChange', lineStart: 56 },
          { name: 'overrides', lineStart: 57 },
          { name: 'renderAll', lineStart: 58 },
          { name: 'uid', lineStart: 59 },
          { name: 'endEnhancer', lineStart: 60 },
        ],
      },
      { name: 'StatefulTabsProps', lineStart: 63, children: [] },
      {
        name: 'TabProps',
        lineStart: 68,
        children: [
          { name: 'title', lineStart: 69 },
          { name: 'key', lineStart: 70 },
          { name: 'tabRef', lineStart: 71 },
          { name: 'overrides', lineStart: 72 },
          { name: 'children', lineStart: 73 },
          { name: 'artwork', lineStart: 74 },
          { name: 'disabled', lineStart: 80 },
        ],
      },
    ],
  },
  {
    file: 'src/tag/types.ts',
    definitions: [
      { name: 'TagKind', lineStart: 16, children: [] },
      { name: 'TagVariant', lineStart: 17, children: [] },
      { name: 'TagSize', lineStart: 18, children: [] },
      {
        name: 'TagOverrides',
        lineStart: 20,
        children: [
          { name: 'Root', lineStart: 21 },
          { name: 'Action', lineStart: 22 },
          { name: 'ActionIcon', lineStart: 23 },
          { name: 'StartEnhancerContainer', lineStart: 24 },
          { name: 'Text', lineStart: 25 },
        ],
      },
      {
        name: 'TagProps',
        lineStart: 28,
        children: [
          { name: 'overrides', lineStart: 29 },
          { name: 'closeable', lineStart: 31 },
          { name: 'disabled', lineStart: 33 },
          { name: 'isFocused', lineStart: 35 },
          { name: 'isHovered', lineStart: 37 },
          { name: 'kind', lineStart: 39 },
          { name: 'variant', lineStart: 41 },
          { name: 'children', lineStart: 43 },
          { name: 'color', lineStart: 45 },
          { name: 'title', lineStart: 47 },
          { name: 'onActionClick', lineStart: 49 },
          { name: 'onActionKeyDown', lineStart: 51 },
          { name: 'onClick', lineStart: 53 },
          { name: 'onKeyDown', lineStart: 55 },
          { name: 'size', lineStart: 57 },
          { name: 'startEnhancer', lineStart: 58 },
        ],
      },
      {
        name: 'SharedPropsArg',
        lineStart: 61,
        children: [
          { name: '$clickable', lineStart: 62 },
          { name: '$closeable', lineStart: 63 },
          { name: '$color', lineStart: 64 },
          { name: '$disabled', lineStart: 65 },
          { name: '$isActive', lineStart: 66 },
          { name: '$isFocused', lineStart: 67 },
          { name: '$isHovered', lineStart: 68 },
          { name: '$kind', lineStart: 69 },
          { name: '$variant', lineStart: 70 },
          { name: '$isFocusVisible', lineStart: 71 },
          { name: '$size', lineStart: 72 },
        ],
      },
    ],
  },
  {
    file: 'src/template-component/types.ts',
    definitions: [
      { name: 'State', lineStart: 11, children: [{ name: 'prop', lineStart: 12 }] },
      { name: 'StateChangeType', lineStart: 15, children: [] },
      { name: 'StateReducer', lineStart: 17, children: [] },
      { name: 'ComponentRenderProp', lineStart: 23, children: [] },
      { name: 'Overrides', lineStart: 25, children: [{ name: 'Root', lineStart: 26 }] },
      { name: 'Child', lineStart: 29, children: [] },
      { name: 'Children', lineStart: 31, children: [] },
      {
        name: 'ComponentProps',
        lineStart: 34,
        children: [
          { name: 'children', lineStart: 35 },
          { name: 'prop', lineStart: 36 },
          { name: 'onClick', lineStart: 37 },
          { name: 'overrides', lineStart: 38 },
        ],
      },
      { name: 'StatefulComponentProps', lineStart: 42, children: [] },
      { name: 'StatefulComponentContainerProps', lineStart: 49, children: [] },
      { name: 'SharedStyleProps', lineStart: 54, children: [{ name: '$prop', lineStart: 55 }] },
    ],
  },
  {
    file: 'src/textarea/types.ts',
    definitions: [
      { name: 'Size', lineStart: 15, children: [] },
      {
        name: 'SharedStyleProps',
        lineStart: 17,
        children: [
          { name: '$adjoined', lineStart: 18 },
          { name: '$disabled', lineStart: 19 },
          { name: '$error', lineStart: 20 },
          { name: '$isFocused', lineStart: 21 },
          { name: '$isReadOnly', lineStart: 22 },
          { name: '$positive', lineStart: 23 },
          { name: '$required', lineStart: 24 },
          { name: '$resize', lineStart: 25 },
          { name: '$size', lineStart: 26 },
        ],
      },
      { name: 'TextareaOverrides', lineStart: 31, children: [] },
      { name: 'TextareaProps', lineStart: 35, children: [] },
      {
        name: 'StatefulContainerProps',
        lineStart: 44,
        children: [
          { name: 'children', lineStart: 46 },
          { name: 'initialState', lineStart: 47 },
          { name: 'stateReducer', lineStart: 48 },
          { name: 'onChange', lineStart: 49 },
          { name: 'onKeyDown', lineStart: 50 },
          { name: 'onKeyPress', lineStart: 51 },
          { name: 'onKeyUp', lineStart: 52 },
        ],
      },
      { name: 'StatefulTextareaProps', lineStart: 62, children: [] },
    ],
  },
  {
    file: 'src/themes/types.ts',
    definitions: [
      { name: 'Globals', lineStart: 13, children: [] },
      { name: 'LineStyle', lineStart: 14, children: [] },
      {
        name: 'ColorTokens',
        lineStart: 26,
        children: [
          { name: 'primaryA', lineStart: 28 },
          { name: 'primaryB', lineStart: 29 },
          { name: 'primary', lineStart: 30 },
          { name: 'primary50', lineStart: 31 },
          { name: 'primary100', lineStart: 32 },
          { name: 'primary200', lineStart: 33 },
          { name: 'primary300', lineStart: 34 },
          { name: 'primary400', lineStart: 35 },
          { name: 'primary500', lineStart: 36 },
          { name: 'primary600', lineStart: 37 },
          { name: 'primary700', lineStart: 38 },
          { name: 'accent', lineStart: 40 },
          { name: 'accent50', lineStart: 41 },
          { name: 'accent100', lineStart: 42 },
          { name: 'accent200', lineStart: 43 },
          { name: 'accent300', lineStart: 44 },
          { name: 'accent400', lineStart: 45 },
          { name: 'accent500', lineStart: 46 },
          { name: 'accent600', lineStart: 47 },
          { name: 'accent700', lineStart: 48 },
          { name: 'negative', lineStart: 50 },
          { name: 'negative50', lineStart: 51 },
          { name: 'negative100', lineStart: 52 },
          { name: 'negative200', lineStart: 53 },
          { name: 'negative300', lineStart: 54 },
          { name: 'negative400', lineStart: 55 },
          { name: 'negative500', lineStart: 56 },
          { name: 'negative600', lineStart: 57 },
          { name: 'negative700', lineStart: 58 },
          { name: 'warning', lineStart: 60 },
          { name: 'warning50', lineStart: 61 },
          { name: 'warning100', lineStart: 62 },
          { name: 'warning200', lineStart: 63 },
          { name: 'warning300', lineStart: 64 },
          { name: 'warning400', lineStart: 65 },
          { name: 'warning500', lineStart: 66 },
          { name: 'warning600', lineStart: 67 },
          { name: 'warning700', lineStart: 68 },
          { name: 'positive', lineStart: 70 },
          { name: 'positive50', lineStart: 71 },
          { name: 'positive100', lineStart: 72 },
          { name: 'positive200', lineStart: 73 },
          { name: 'positive300', lineStart: 74 },
          { name: 'positive400', lineStart: 75 },
          { name: 'positive500', lineStart: 76 },
          { name: 'positive600', lineStart: 77 },
          { name: 'positive700', lineStart: 78 },
          { name: 'white', lineStart: 80 },
          { name: 'black', lineStart: 81 },
          { name: 'mono100', lineStart: 82 },
          { name: 'mono200', lineStart: 83 },
          { name: 'mono300', lineStart: 84 },
          { name: 'mono400', lineStart: 85 },
          { name: 'mono500', lineStart: 86 },
          { name: 'mono600', lineStart: 87 },
          { name: 'mono700', lineStart: 88 },
          { name: 'mono800', lineStart: 89 },
          { name: 'mono900', lineStart: 90 },
          { name: 'mono1000', lineStart: 91 },
          { name: 'ratingInactiveFill', lineStart: 93 },
          { name: 'ratingStroke', lineStart: 94 },
        ],
      },
      {
        name: 'CoreSemanticColorTokens',
        lineStart: 97,
        children: [
          { name: 'backgroundPrimary', lineStart: 99 },
          { name: 'backgroundSecondary', lineStart: 100 },
          { name: 'backgroundTertiary', lineStart: 101 },
          { name: 'backgroundInversePrimary', lineStart: 102 },
          { name: 'backgroundInverseSecondary', lineStart: 103 },
          { name: 'contentPrimary', lineStart: 105 },
          { name: 'contentSecondary', lineStart: 106 },
          { name: 'contentTertiary', lineStart: 107 },
          { name: 'contentInversePrimary', lineStart: 108 },
          { name: 'contentInverseSecondary', lineStart: 109 },
          { name: 'contentInverseTertiary', lineStart: 110 },
          { name: 'borderOpaque', lineStart: 112 },
          { name: 'borderTransparent', lineStart: 113 },
          { name: 'borderSelected', lineStart: 114 },
          { name: 'borderInverseOpaque', lineStart: 115 },
          { name: 'borderInverseTransparent', lineStart: 116 },
          { name: 'borderInverseSelected', lineStart: 117 },
        ],
      },
      {
        name: 'CoreExtensionSemanticColorTokens',
        lineStart: 119,
        children: [
          { name: 'backgroundStateDisabled', lineStart: 121 },
          { name: 'backgroundOverlayDark', lineStart: 122 },
          { name: 'backgroundOverlayLight', lineStart: 123 },
          { name: 'backgroundOverlayArt', lineStart: 124 },
          { name: 'backgroundAccent', lineStart: 125 },
          { name: 'backgroundNegative', lineStart: 126 },
          { name: 'backgroundWarning', lineStart: 127 },
          { name: 'backgroundPositive', lineStart: 128 },
          { name: 'backgroundLightAccent', lineStart: 129 },
          { name: 'backgroundLightPositive', lineStart: 130 },
          { name: 'backgroundLightNegative', lineStart: 131 },
          { name: 'backgroundLightWarning', lineStart: 132 },
          { name: 'backgroundAlwaysDark', lineStart: 133 },
          { name: 'backgroundAlwaysLight', lineStart: 134 },
          { name: 'contentStateDisabled', lineStart: 136 },
          { name: 'contentAccent', lineStart: 137 },
          { name: 'contentOnColor', lineStart: 138 },
          { name: 'contentOnColorInverse', lineStart: 139 },
          { name: 'contentNegative', lineStart: 140 },
          { name: 'contentWarning', lineStart: 141 },
          { name: 'contentPositive', lineStart: 142 },
          { name: 'borderStateDisabled', lineStart: 144 },
          { name: 'borderAccent', lineStart: 145 },
          { name: 'borderAccentLight', lineStart: 146 },
          { name: 'borderNegative', lineStart: 147 },
          { name: 'borderWarning', lineStart: 148 },
          { name: 'borderPositive', lineStart: 149 },
          { name: 'safety', lineStart: 151 },
          { name: 'eatsGreen400', lineStart: 152 },
          { name: 'freightBlue400', lineStart: 153 },
          { name: 'jumpRed400', lineStart: 154 },
          { name: 'rewardsTier1', lineStart: 155 },
          { name: 'rewardsTier2', lineStart: 156 },
          { name: 'rewardsTier3', lineStart: 157 },
          { name: 'rewardsTier4', lineStart: 158 },
          { name: 'membership', lineStart: 159 },
        ],
      },
      { name: 'SemanticColorTokens', lineStart: 162, children: [] },
      {
        name: 'ComponentColorTokens',
        lineStart: 164,
        children: [
          { name: 'bannerActionLowInfo', lineStart: 165 },
          { name: 'bannerActionLowNegative', lineStart: 166 },
          { name: 'bannerActionLowPositive', lineStart: 167 },
          { name: 'bannerActionLowWarning', lineStart: 168 },
          { name: 'bannerActionHighInfo', lineStart: 169 },
          { name: 'bannerActionHighNegative', lineStart: 170 },
          { name: 'bannerActionHighPositive', lineStart: 171 },
          { name: 'bannerActionHighWarning', lineStart: 172 },
          { name: 'buttonPrimaryFill', lineStart: 174 },
          { name: 'buttonPrimaryText', lineStart: 175 },
          { name: 'buttonPrimaryHover', lineStart: 176 },
          { name: 'buttonPrimaryActive', lineStart: 177 },
          { name: 'buttonPrimarySelectedText', lineStart: 178 },
          { name: 'buttonPrimarySelectedFill', lineStart: 179 },
          { name: 'buttonPrimarySpinnerForeground', lineStart: 180 },
          { name: 'buttonPrimarySpinnerBackground', lineStart: 181 },
          { name: 'buttonSecondaryFill', lineStart: 182 },
          { name: 'buttonSecondaryText', lineStart: 183 },
          { name: 'buttonSecondaryHover', lineStart: 184 },
          { name: 'buttonSecondaryActive', lineStart: 185 },
          { name: 'buttonSecondarySelectedText', lineStart: 186 },
          { name: 'buttonSecondarySelectedFill', lineStart: 187 },
          { name: 'buttonSecondarySpinnerForeground', lineStart: 188 },
          { name: 'buttonSecondarySpinnerBackground', lineStart: 189 },
          { name: 'buttonTertiaryFill', lineStart: 190 },
          { name: 'buttonTertiaryText', lineStart: 191 },
          { name: 'buttonTertiaryHover', lineStart: 192 },
          { name: 'buttonTertiaryActive', lineStart: 193 },
          { name: 'buttonTertiarySelectedText', lineStart: 194 },
          { name: 'buttonTertiarySelectedFill', lineStart: 195 },
          { name: 'buttonTertiaryDisabledActiveFill', lineStart: 196 },
          { name: 'buttonTertiaryDisabledActiveText', lineStart: 197 },
          { name: 'buttonTertiarySpinnerForeground', lineStart: 198 },
          { name: 'buttonTertiarySpinnerBackground', lineStart: 199 },
          { name: 'buttonDisabledFill', lineStart: 200 },
          { name: 'buttonDisabledText', lineStart: 201 },
          { name: 'buttonDisabledActiveFill', lineStart: 202 },
          { name: 'buttonDisabledActiveText', lineStart: 203 },
          { name: 'buttonDisabledSpinnerForeground', lineStart: 204 },
          { name: 'buttonDisabledSpinnerBackground', lineStart: 205 },
          { name: 'breadcrumbsText', lineStart: 207 },
          { name: 'breadcrumbsSeparatorFill', lineStart: 208 },
          { name: 'calendarBackground', lineStart: 210 },
          { name: 'calendarForeground', lineStart: 211 },
          { name: 'calendarForegroundDisabled', lineStart: 212 },
          { name: 'calendarHeaderBackground', lineStart: 213 },
          { name: 'calendarHeaderForeground', lineStart: 214 },
          { name: 'calendarHeaderBackgroundActive', lineStart: 215 },
          { name: 'calendarHeaderForegroundDisabled', lineStart: 216 },
          { name: 'calendarDayForegroundPseudoSelected', lineStart: 217 },
          { name: 'calendarDayBackgroundPseudoSelectedHighlighted', lineStart: 218 },
          { name: 'calendarDayForegroundPseudoSelectedHighlighted', lineStart: 219 },
          { name: 'calendarDayBackgroundSelected', lineStart: 220 },
          { name: 'calendarDayForegroundSelected', lineStart: 221 },
          { name: 'calendarDayBackgroundSelectedHighlighted', lineStart: 222 },
          { name: 'calendarDayForegroundSelectedHighlighted', lineStart: 223 },
          { name: 'comboboxListItemFocus', lineStart: 225 },
          { name: 'comboboxListItemHover', lineStart: 226 },
          { name: 'fileUploaderBackgroundColor', lineStart: 228 },
          { name: 'fileUploaderBackgroundColorActive', lineStart: 229 },
          { name: 'fileUploaderBorderColorActive', lineStart: 230 },
          { name: 'fileUploaderBorderColorDefault', lineStart: 231 },
          { name: 'fileUploaderMessageColor', lineStart: 232 },
          { name: 'linkText', lineStart: 234 },
          { name: 'linkVisited', lineStart: 235 },
          { name: 'linkHover', lineStart: 236 },
          { name: 'linkActive', lineStart: 237 },
          { name: 'listHeaderFill', lineStart: 239 },
          { name: 'listBodyFill', lineStart: 240 },
          { name: 'progressStepsCompletedText', lineStart: 242 },
          { name: 'progressStepsCompletedFill', lineStart: 243 },
          { name: 'progressStepsActiveText', lineStart: 244 },
          { name: 'progressStepsActiveFill', lineStart: 245 },
          { name: 'toggleFill', lineStart: 247 },
          { name: 'toggleFillChecked', lineStart: 248 },
          { name: 'toggleFillDisabled', lineStart: 249 },
          { name: 'toggleTrackFill', lineStart: 250 },
          { name: 'toggleTrackFillDisabled', lineStart: 251 },
          { name: 'tickFill', lineStart: 253 },
          { name: 'tickFillHover', lineStart: 254 },
          { name: 'tickFillActive', lineStart: 255 },
          { name: 'tickFillSelected', lineStart: 256 },
          { name: 'tickFillSelectedHover', lineStart: 257 },
          { name: 'tickFillSelectedHoverActive', lineStart: 258 },
          { name: 'tickFillError', lineStart: 259 },
          { name: 'tickFillErrorHover', lineStart: 260 },
          { name: 'tickFillErrorHoverActive', lineStart: 261 },
          { name: 'tickFillErrorSelected', lineStart: 262 },
          { name: 'tickFillErrorSelectedHover', lineStart: 263 },
          { name: 'tickFillErrorSelectedHoverActive', lineStart: 264 },
          { name: 'tickFillDisabled', lineStart: 265 },
          { name: 'tickBorder', lineStart: 266 },
          { name: 'tickBorderError', lineStart: 267 },
          { name: 'tickMarkFill', lineStart: 268 },
          { name: 'tickMarkFillDisabled', lineStart: 269 },
          { name: 'tickMarkFillError', lineStart: 270 },
          { name: 'sliderTrackFill', lineStart: 272 },
          { name: 'sliderTrackFillHover', lineStart: 273 },
          { name: 'sliderTrackFillActive', lineStart: 274 },
          { name: 'sliderTrackFillDisabled', lineStart: 275 },
          { name: 'sliderHandleFill', lineStart: 276 },
          { name: 'sliderHandleFillDisabled', lineStart: 277 },
          { name: 'sliderHandleInnerFill', lineStart: 278 },
          { name: 'sliderHandleInnerFillDisabled', lineStart: 279 },
          { name: 'sliderHandleInnerFillSelectedHover', lineStart: 280 },
          { name: 'sliderHandleInnerFillSelectedActive', lineStart: 281 },
          { name: 'inputBorder', lineStart: 283 },
          { name: 'inputFill', lineStart: 284 },
          { name: 'inputFillError', lineStart: 285 },
          { name: 'inputFillDisabled', lineStart: 286 },
          { name: 'inputFillActive', lineStart: 287 },
          { name: 'inputFillPositive', lineStart: 288 },
          { name: 'inputTextDisabled', lineStart: 289 },
          { name: 'inputBorderError', lineStart: 290 },
          { name: 'inputBorderPositive', lineStart: 291 },
          { name: 'inputEnhancerFill', lineStart: 292 },
          { name: 'inputEnhancerFillDisabled', lineStart: 293 },
          { name: 'inputEnhancerTextDisabled', lineStart: 294 },
          { name: 'inputPlaceholder', lineStart: 295 },
          { name: 'inputPlaceholderDisabled', lineStart: 296 },
          { name: 'notificationInfoBackground', lineStart: 298 },
          { name: 'notificationInfoText', lineStart: 299 },
          { name: 'notificationPositiveBackground', lineStart: 300 },
          { name: 'notificationPositiveText', lineStart: 301 },
          { name: 'notificationWarningBackground', lineStart: 302 },
          { name: 'notificationWarningText', lineStart: 303 },
          { name: 'notificationNegativeBackground', lineStart: 304 },
          { name: 'notificationNegativeText', lineStart: 305 },
          { name: 'menuFill', lineStart: 307 },
          { name: 'menuFillHover', lineStart: 308 },
          { name: 'menuFontDefault', lineStart: 309 },
          { name: 'menuFontDisabled', lineStart: 310 },
          { name: 'menuFontHighlighted', lineStart: 311 },
          { name: 'menuFontSelected', lineStart: 312 },
          { name: 'modalCloseColor', lineStart: 314 },
          { name: 'modalCloseColorHover', lineStart: 315 },
          { name: 'modalCloseColorFocus', lineStart: 316 },
          { name: 'tabBarFill', lineStart: 318 },
          { name: 'tabColor', lineStart: 319 },
          { name: 'tagSolidRampUnit', lineStart: 321 },
          { name: 'tagSolidHoverRampUnit', lineStart: 322 },
          { name: 'tagSolidActiveRampUnit', lineStart: 323 },
          { name: 'tagSolidDisabledRampUnit', lineStart: 324 },
          { name: 'tagSolidFontRampUnit', lineStart: 325 },
          { name: 'tagSolidFontHoverRampUnit', lineStart: 326 },
          { name: 'tagLightRampUnit', lineStart: 327 },
          { name: 'tagLightHoverRampUnit', lineStart: 328 },
          { name: 'tagLightActiveRampUnit', lineStart: 329 },
          { name: 'tagLightFontRampUnit', lineStart: 330 },
          { name: 'tagLightFontHoverRampUnit', lineStart: 331 },
          { name: 'tagOutlinedRampUnit', lineStart: 332 },
          { name: 'tagOutlinedHoverRampUnit', lineStart: 333 },
          { name: 'tagOutlinedActiveRampUnit', lineStart: 334 },
          { name: 'tagOutlinedFontRampUnit', lineStart: 335 },
          { name: 'tagOutlinedFontHoverRampUnit', lineStart: 336 },
          { name: 'tagFontDisabledRampUnit', lineStart: 337 },
          { name: 'tagNeutralSolidBackground', lineStart: 338 },
          { name: 'tagNeutralSolidHover', lineStart: 339 },
          { name: 'tagNeutralSolidActive', lineStart: 340 },
          { name: 'tagNeutralSolidDisabled', lineStart: 341 },
          { name: 'tagNeutralSolidFont', lineStart: 342 },
          { name: 'tagNeutralSolidFontHover', lineStart: 343 },
          { name: 'tagNeutralLightBackground', lineStart: 344 },
          { name: 'tagNeutralLightHover', lineStart: 345 },
          { name: 'tagNeutralLightActive', lineStart: 346 },
          { name: 'tagNeutralLightDisabled', lineStart: 347 },
          { name: 'tagNeutralLightFont', lineStart: 348 },
          { name: 'tagNeutralLightFontHover', lineStart: 349 },
          { name: 'tagNeutralOutlinedBackground', lineStart: 350 },
          { name: 'tagNeutralOutlinedHover', lineStart: 351 },
          { name: 'tagNeutralOutlinedActive', lineStart: 352 },
          { name: 'tagNeutralOutlinedDisabled', lineStart: 353 },
          { name: 'tagNeutralOutlinedFont', lineStart: 354 },
          { name: 'tagNeutralOutlinedFontHover', lineStart: 355 },
          { name: 'tagNeutralFontDisabled', lineStart: 356 },
          { name: 'tagPrimarySolidBackground', lineStart: 357 },
          { name: 'tagPrimarySolidHover', lineStart: 358 },
          { name: 'tagPrimarySolidActive', lineStart: 359 },
          { name: 'tagPrimarySolidDisabled', lineStart: 360 },
          { name: 'tagPrimarySolidFont', lineStart: 361 },
          { name: 'tagPrimarySolidFontHover', lineStart: 362 },
          { name: 'tagPrimaryLightBackground', lineStart: 363 },
          { name: 'tagPrimaryLightHover', lineStart: 364 },
          { name: 'tagPrimaryLightActive', lineStart: 365 },
          { name: 'tagPrimaryLightDisabled', lineStart: 366 },
          { name: 'tagPrimaryLightFont', lineStart: 367 },
          { name: 'tagPrimaryLightFontHover', lineStart: 368 },
          { name: 'tagPrimaryOutlinedBackground', lineStart: 369 },
          { name: 'tagPrimaryOutlinedHover', lineStart: 370 },
          { name: 'tagPrimaryOutlinedActive', lineStart: 371 },
          { name: 'tagPrimaryOutlinedDisabled', lineStart: 372 },
          { name: 'tagPrimaryOutlinedFont', lineStart: 373 },
          { name: 'tagPrimaryOutlinedFontHover', lineStart: 374 },
          { name: 'tagPrimaryFontDisabled', lineStart: 375 },
          { name: 'tagAccentSolidBackground', lineStart: 376 },
          { name: 'tagAccentSolidHover', lineStart: 377 },
          { name: 'tagAccentSolidActive', lineStart: 378 },
          { name: 'tagAccentSolidDisabled', lineStart: 379 },
          { name: 'tagAccentSolidFont', lineStart: 380 },
          { name: 'tagAccentSolidFontHover', lineStart: 381 },
          { name: 'tagAccentLightBackground', lineStart: 382 },
          { name: 'tagAccentLightHover', lineStart: 383 },
          { name: 'tagAccentLightActive', lineStart: 384 },
          { name: 'tagAccentLightDisabled', lineStart: 385 },
          { name: 'tagAccentLightFont', lineStart: 386 },
          { name: 'tagAccentLightFontHover', lineStart: 387 },
          { name: 'tagAccentOutlinedBackground', lineStart: 388 },
          { name: 'tagAccentOutlinedHover', lineStart: 389 },
          { name: 'tagAccentOutlinedActive', lineStart: 390 },
          { name: 'tagAccentOutlinedDisabled', lineStart: 391 },
          { name: 'tagAccentOutlinedFont', lineStart: 392 },
          { name: 'tagAccentOutlinedFontHover', lineStart: 393 },
          { name: 'tagAccentFontDisabled', lineStart: 394 },
          { name: 'tagPositiveSolidBackground', lineStart: 395 },
          { name: 'tagPositiveSolidHover', lineStart: 396 },
          { name: 'tagPositiveSolidActive', lineStart: 397 },
          { name: 'tagPositiveSolidDisabled', lineStart: 398 },
          { name: 'tagPositiveSolidFont', lineStart: 399 },
          { name: 'tagPositiveSolidFontHover', lineStart: 400 },
          { name: 'tagPositiveLightBackground', lineStart: 401 },
          { name: 'tagPositiveLightHover', lineStart: 402 },
          { name: 'tagPositiveLightActive', lineStart: 403 },
          { name: 'tagPositiveLightDisabled', lineStart: 404 },
          { name: 'tagPositiveLightFont', lineStart: 405 },
          { name: 'tagPositiveLightFontHover', lineStart: 406 },
          { name: 'tagPositiveOutlinedBackground', lineStart: 407 },
          { name: 'tagPositiveOutlinedHover', lineStart: 408 },
          { name: 'tagPositiveOutlinedActive', lineStart: 409 },
          { name: 'tagPositiveOutlinedDisabled', lineStart: 410 },
          { name: 'tagPositiveOutlinedFont', lineStart: 411 },
          { name: 'tagPositiveOutlinedFontHover', lineStart: 412 },
          { name: 'tagPositiveFontDisabled', lineStart: 413 },
          { name: 'tagWarningSolidBackground', lineStart: 414 },
          { name: 'tagWarningSolidHover', lineStart: 415 },
          { name: 'tagWarningSolidActive', lineStart: 416 },
          { name: 'tagWarningSolidDisabled', lineStart: 417 },
          { name: 'tagWarningSolidFont', lineStart: 418 },
          { name: 'tagWarningSolidFontHover', lineStart: 419 },
          { name: 'tagWarningLightBackground', lineStart: 420 },
          { name: 'tagWarningLightHover', lineStart: 421 },
          { name: 'tagWarningLightActive', lineStart: 422 },
          { name: 'tagWarningLightDisabled', lineStart: 423 },
          { name: 'tagWarningLightFont', lineStart: 424 },
          { name: 'tagWarningLightFontHover', lineStart: 425 },
          { name: 'tagWarningOutlinedBackground', lineStart: 426 },
          { name: 'tagWarningOutlinedHover', lineStart: 427 },
          { name: 'tagWarningOutlinedActive', lineStart: 428 },
          { name: 'tagWarningOutlinedDisabled', lineStart: 429 },
          { name: 'tagWarningOutlinedFont', lineStart: 430 },
          { name: 'tagWarningOutlinedFontHover', lineStart: 431 },
          { name: 'tagWarningFontDisabled', lineStart: 432 },
          { name: 'tagNegativeSolidBackground', lineStart: 433 },
          { name: 'tagNegativeSolidHover', lineStart: 434 },
          { name: 'tagNegativeSolidActive', lineStart: 435 },
          { name: 'tagNegativeSolidDisabled', lineStart: 436 },
          { name: 'tagNegativeSolidFont', lineStart: 437 },
          { name: 'tagNegativeSolidFontHover', lineStart: 438 },
          { name: 'tagNegativeLightBackground', lineStart: 439 },
          { name: 'tagNegativeLightHover', lineStart: 440 },
          { name: 'tagNegativeLightActive', lineStart: 441 },
          { name: 'tagNegativeLightDisabled', lineStart: 442 },
          { name: 'tagNegativeLightFont', lineStart: 443 },
          { name: 'tagNegativeLightFontHover', lineStart: 444 },
          { name: 'tagNegativeOutlinedBackground', lineStart: 445 },
          { name: 'tagNegativeOutlinedHover', lineStart: 446 },
          { name: 'tagNegativeOutlinedActive', lineStart: 447 },
          { name: 'tagNegativeOutlinedDisabled', lineStart: 448 },
          { name: 'tagNegativeOutlinedFont', lineStart: 449 },
          { name: 'tagNegativeOutlinedFontHover', lineStart: 450 },
          { name: 'tagNegativeFontDisabled', lineStart: 451 },
          { name: 'tableHeadBackgroundColor', lineStart: 453 },
          { name: 'tableBackground', lineStart: 454 },
          { name: 'tableStripedBackground', lineStart: 455 },
          { name: 'tableFilter', lineStart: 456 },
          { name: 'tableFilterHeading', lineStart: 457 },
          { name: 'tableFilterBackground', lineStart: 458 },
          { name: 'tableFilterFooterBackground', lineStart: 459 },
          { name: 'toastText', lineStart: 461 },
          { name: 'toastPrimaryText', lineStart: 462 },
          { name: 'toastInfoBackground', lineStart: 463 },
          { name: 'toastInfoText', lineStart: 464 },
          { name: 'toastPositiveBackground', lineStart: 465 },
          { name: 'toastPositiveText', lineStart: 466 },
          { name: 'toastWarningBackground', lineStart: 467 },
          { name: 'toastWarningText', lineStart: 468 },
          { name: 'toastNegativeBackground', lineStart: 469 },
          { name: 'toastNegativeText', lineStart: 470 },
          { name: 'spinnerTrackFill', lineStart: 472 },
          { name: 'progressbarTrackFill', lineStart: 474 },
          { name: 'tooltipBackground', lineStart: 476 },
          { name: 'tooltipText', lineStart: 477 },
        ],
      },
      {
        name: 'FontTokens',
        lineStart: 480,
        children: [{ name: 'primaryFontFamily', lineStart: 481 }],
      },
      { name: 'Primitives', lineStart: 485, children: [] },
      {
        name: 'Font',
        lineStart: 487,
        children: [
          { name: 'fontFamily', lineStart: 488 },
          { name: 'fontWeight', lineStart: 489 },
          { name: 'fontSize', lineStart: 490 },
          { name: 'lineHeight', lineStart: 491 },
        ],
      },
      {
        name: 'Typography',
        lineStart: 493,
        children: [
          { name: 'font100', lineStart: 494 },
          { name: 'font150', lineStart: 495 },
          { name: 'font200', lineStart: 496 },
          { name: 'font250', lineStart: 497 },
          { name: 'font300', lineStart: 498 },
          { name: 'font350', lineStart: 499 },
          { name: 'font400', lineStart: 500 },
          { name: 'font450', lineStart: 501 },
          { name: 'font550', lineStart: 502 },
          { name: 'font650', lineStart: 503 },
          { name: 'font750', lineStart: 504 },
          { name: 'font850', lineStart: 505 },
          { name: 'font950', lineStart: 506 },
          { name: 'font1050', lineStart: 507 },
          { name: 'font1150', lineStart: 508 },
          { name: 'font1250', lineStart: 509 },
          { name: 'font1350', lineStart: 510 },
          { name: 'font1450', lineStart: 511 },
          { name: 'ParagraphXSmall', lineStart: 512 },
          { name: 'ParagraphSmall', lineStart: 513 },
          { name: 'ParagraphMedium', lineStart: 514 },
          { name: 'ParagraphLarge', lineStart: 515 },
          { name: 'LabelXSmall', lineStart: 516 },
          { name: 'LabelSmall', lineStart: 517 },
          { name: 'LabelMedium', lineStart: 518 },
          { name: 'LabelLarge', lineStart: 519 },
          { name: 'HeadingXSmall', lineStart: 520 },
          { name: 'HeadingSmall', lineStart: 521 },
          { name: 'HeadingMedium', lineStart: 522 },
          { name: 'HeadingLarge', lineStart: 523 },
          { name: 'HeadingXLarge', lineStart: 524 },
          { name: 'HeadingXXLarge', lineStart: 525 },
          { name: 'DisplayXSmall', lineStart: 526 },
          { name: 'DisplaySmall', lineStart: 527 },
          { name: 'DisplayMedium', lineStart: 528 },
          { name: 'DisplayLarge', lineStart: 529 },
          { name: 'MonoParagraphXSmall', lineStart: 530 },
          { name: 'MonoParagraphSmall', lineStart: 531 },
          { name: 'MonoParagraphMedium', lineStart: 532 },
          { name: 'MonoParagraphLarge', lineStart: 533 },
          { name: 'MonoLabelXSmall', lineStart: 534 },
          { name: 'MonoLabelSmall', lineStart: 535 },
          { name: 'MonoLabelMedium', lineStart: 536 },
          { name: 'MonoLabelLarge', lineStart: 537 },
          { name: 'MonoHeadingXSmall', lineStart: 538 },
          { name: 'MonoHeadingSmall', lineStart: 539 },
          { name: 'MonoHeadingMedium', lineStart: 540 },
          { name: 'MonoHeadingLarge', lineStart: 541 },
          { name: 'MonoHeadingXLarge', lineStart: 542 },
          { name: 'MonoHeadingXXLarge', lineStart: 543 },
          { name: 'MonoDisplayXSmall', lineStart: 544 },
          { name: 'MonoDisplaySmall', lineStart: 545 },
          { name: 'MonoDisplayMedium', lineStart: 546 },
          { name: 'MonoDisplayLarge', lineStart: 547 },
        ],
      },
      {
        name: 'Sizing',
        lineStart: 550,
        children: [
          { name: 'scale0', lineStart: 551 },
          { name: 'scale100', lineStart: 552 },
          { name: 'scale200', lineStart: 553 },
          { name: 'scale300', lineStart: 554 },
          { name: 'scale400', lineStart: 555 },
          { name: 'scale500', lineStart: 556 },
          { name: 'scale550', lineStart: 557 },
          { name: 'scale600', lineStart: 558 },
          { name: 'scale650', lineStart: 559 },
          { name: 'scale700', lineStart: 560 },
          { name: 'scale750', lineStart: 561 },
          { name: 'scale800', lineStart: 562 },
          { name: 'scale850', lineStart: 563 },
          { name: 'scale900', lineStart: 564 },
          { name: 'scale950', lineStart: 565 },
          { name: 'scale1000', lineStart: 566 },
          { name: 'scale1200', lineStart: 567 },
          { name: 'scale1400', lineStart: 568 },
          { name: 'scale1600', lineStart: 569 },
          { name: 'scale2400', lineStart: 570 },
          { name: 'scale3200', lineStart: 571 },
          { name: 'scale4800', lineStart: 572 },
        ],
      },
      {
        name: 'Breakpoints',
        lineStart: 575,
        children: [
          { name: 'small', lineStart: 576 },
          { name: 'medium', lineStart: 577 },
          { name: 'large', lineStart: 578 },
        ],
      },
      {
        name: 'MediaQuery',
        lineStart: 581,
        children: [
          { name: 'small', lineStart: 582 },
          { name: 'medium', lineStart: 583 },
          { name: 'large', lineStart: 584 },
        ],
      },
      {
        name: 'Lighting',
        lineStart: 587,
        children: [
          { name: 'shadow400', lineStart: 588 },
          { name: 'shadow500', lineStart: 589 },
          { name: 'shadow600', lineStart: 590 },
          { name: 'shadow700', lineStart: 591 },
          { name: 'overlay0', lineStart: 592 },
          { name: 'overlay100', lineStart: 593 },
          { name: 'overlay200', lineStart: 594 },
          { name: 'overlay300', lineStart: 595 },
          { name: 'overlay400', lineStart: 596 },
          { name: 'overlay500', lineStart: 597 },
          { name: 'overlay600', lineStart: 598 },
          { name: 'shallowAbove', lineStart: 599 },
          { name: 'shallowBelow', lineStart: 600 },
          { name: 'deepAbove', lineStart: 601 },
          { name: 'deepBelow', lineStart: 602 },
        ],
      },
      {
        name: 'Animation',
        lineStart: 605,
        children: [
          { name: 'timing100', lineStart: 606 },
          { name: 'timing200', lineStart: 607 },
          { name: 'timing300', lineStart: 608 },
          { name: 'timing400', lineStart: 609 },
          { name: 'timing500', lineStart: 610 },
          { name: 'timing600', lineStart: 611 },
          { name: 'timing700', lineStart: 612 },
          { name: 'timing800', lineStart: 613 },
          { name: 'timing900', lineStart: 614 },
          { name: 'timing1000', lineStart: 615 },
          { name: 'easeOutCurve', lineStart: 616 },
          { name: 'easeInCurve', lineStart: 617 },
          { name: 'easeInOutCurve', lineStart: 618 },
          { name: 'easeInQuinticCurve', lineStart: 619 },
          { name: 'easeOutQuinticCurve', lineStart: 620 },
          { name: 'easeInOutQuinticCurve', lineStart: 621 },
          { name: 'linearCurve', lineStart: 622 },
        ],
      },
      {
        name: 'Border',
        lineStart: 625,
        children: [
          { name: 'borderColor', lineStart: 626 },
          { name: 'borderStyle', lineStart: 628 },
          { name: 'borderWidth', lineStart: 629 },
        ],
      },
      {
        name: 'Borders',
        lineStart: 632,
        children: [
          { name: 'border100', lineStart: 633 },
          { name: 'border200', lineStart: 634 },
          { name: 'border300', lineStart: 635 },
          { name: 'border400', lineStart: 636 },
          { name: 'border500', lineStart: 637 },
          { name: 'border600', lineStart: 638 },
          { name: 'radius100', lineStart: 639 },
          { name: 'radius200', lineStart: 640 },
          { name: 'radius300', lineStart: 641 },
          { name: 'radius400', lineStart: 642 },
          { name: 'radius500', lineStart: 643 },
          { name: 'useRoundedCorners', lineStart: 644 },
          { name: 'buttonBorderRadius', lineStart: 645 },
          { name: 'buttonBorderRadiusMini', lineStart: 646 },
          { name: 'checkboxBorderRadius', lineStart: 647 },
          { name: 'surfaceBorderRadius', lineStart: 648 },
          { name: 'inputBorderRadius', lineStart: 649 },
          { name: 'inputBorderRadiusMini', lineStart: 650 },
          { name: 'popoverBorderRadius', lineStart: 651 },
          { name: 'tagBorderRadius', lineStart: 652 },
        ],
      },
      {
        name: 'Grid',
        lineStart: 655,
        children: [
          { name: 'columns', lineStart: 656 },
          { name: 'gutters', lineStart: 657 },
          { name: 'margins', lineStart: 658 },
          { name: 'gaps', lineStart: 659 },
          { name: 'maxWidth', lineStart: 660 },
          { name: 'unit', lineStart: 661 },
        ],
      },
      { name: 'ZIndex', lineStart: 665, children: [{ name: 'modal', lineStart: 666 }] },
    ],
  },
  {
    file: 'src/timepicker/types.ts',
    definitions: [
      { name: 'TimePickerOverrides', lineStart: 12, children: [{ name: 'Select', lineStart: 13 }] },
      {
        name: 'TimePickerProps',
        lineStart: 15,
        children: [
          { name: 'adapter', lineStart: 17 },
          { name: 'format', lineStart: 18 },
          { name: 'onChange', lineStart: 20 },
          { name: 'overrides', lineStart: 21 },
          { name: 'creatable', lineStart: 23 },
          { name: 'step', lineStart: 25 },
          { name: 'value', lineStart: 30 },
          { name: 'disabled', lineStart: 31 },
          { name: 'error', lineStart: 32 },
          { name: 'positive', lineStart: 33 },
          { name: 'nullable', lineStart: 34 },
          { name: 'placeholder', lineStart: 35 },
          { name: 'size', lineStart: 36 },
          { name: 'minTime', lineStart: 37 },
          { name: 'maxTime', lineStart: 38 },
          { name: 'ignoreMinMaxDateComponent', lineStart: 47 },
        ],
      },
      {
        name: 'TimePickerState',
        lineStart: 49,
        children: [
          { name: 'steps', lineStart: 51 },
          { name: 'value', lineStart: 53 },
        ],
      },
      {
        name: 'TimePickerDefaultProps',
        lineStart: 56,
        children: [
          { name: 'format', lineStart: 57 },
          { name: 'step', lineStart: 58 },
          { name: 'creatable', lineStart: 59 },
          { name: 'adapter', lineStart: 60 },
          { name: 'ignoreMinMaxDateComponent', lineStart: 61 },
        ],
      },
    ],
  },
  {
    file: 'src/timezonepicker/types.ts',
    definitions: [
      {
        name: 'TimezonePickerState',
        lineStart: 14,
        children: [
          { name: 'timezones', lineStart: 16 },
          { name: 'value', lineStart: 18 },
        ],
      },
      {
        name: 'Timezone',
        lineStart: 21,
        children: [
          { name: 'id', lineStart: 22 },
          { name: 'label', lineStart: 23 },
          { name: 'offset', lineStart: 29 },
        ],
      },
      {
        name: 'TimezonePickerOverrides',
        lineStart: 31,
        children: [{ name: 'Select', lineStart: 32 }],
      },
      {
        name: 'TimezonePickerProps',
        lineStart: 34,
        children: [
          { name: 'additionalTimezones', lineStart: 35 },
          { name: 'date', lineStart: 43 },
          { name: 'mapLabels', lineStart: 48 },
          { name: 'onChange', lineStart: 50 },
          { name: 'overrides', lineStart: 51 },
          { name: 'value', lineStart: 56 },
          { name: 'disabled', lineStart: 57 },
          { name: 'error', lineStart: 58 },
          { name: 'positive', lineStart: 59 },
          { name: 'size', lineStart: 60 },
          { name: 'includeAbbreviations', lineStart: 61 },
        ],
      },
    ],
  },
  {
    file: 'src/toast/types.ts',
    definitions: [
      { name: 'KindType', lineStart: 12, children: [] },
      { name: 'NotificationType', lineStart: 13, children: [] },
      { name: 'PlacementType', lineStart: 14, children: [] },
      {
        name: 'SharedStylePropsArg',
        lineStart: 16,
        children: [
          { name: '$closeable', lineStart: 17 },
          { name: '$isFocusVisible', lineStart: 18 },
          { name: '$isRendered', lineStart: 19 },
          { name: '$isVisible', lineStart: 20 },
          { name: '$kind', lineStart: 21 },
          { name: '$type', lineStart: 22 },
        ],
      },
      {
        name: 'ToasterSharedStylePropsArg',
        lineStart: 25,
        children: [{ name: '$placement', lineStart: 26 }],
      },
      {
        name: 'ToastOverrides',
        lineStart: 29,
        children: [
          { name: 'Body', lineStart: 30 },
          { name: 'CloseIcon', lineStart: 31 },
          { name: 'InnerContainer', lineStart: 32 },
        ],
      },
      { name: 'ComponentRenderProp', lineStart: 35, children: [] },
      { name: 'Child', lineStart: 37, children: [] },
      { name: 'Children', lineStart: 39, children: [] },
      {
        name: 'ToastPrivateState',
        lineStart: 41,
        children: [
          { name: 'isFocusVisible', lineStart: 42 },
          { name: 'isRendered', lineStart: 43 },
          { name: 'isVisible', lineStart: 44 },
        ],
      },
      {
        name: 'ToastProps',
        lineStart: 47,
        children: [
          { name: '__updated', lineStart: 52 },
          { name: 'autoFocus', lineStart: 58 },
          { name: 'autoHideDuration', lineStart: 61 },
          { name: 'children', lineStart: 66 },
          { name: 'closeable', lineStart: 68 },
          { lineStart: 69 },
          { name: 'key', lineStart: 70 },
          { name: 'kind', lineStart: 72 },
          { name: 'notificationType', lineStart: 73 },
          { name: 'onBlur', lineStart: 75 },
          { name: 'onClose', lineStart: 76 },
          { name: 'onFocus', lineStart: 77 },
          { name: 'onMouseEnter', lineStart: 78 },
          { name: 'onMouseLeave', lineStart: 79 },
          { name: 'overrides', lineStart: 80 },
        ],
      },
      { name: 'ToastPropsShape', lineStart: 83, children: [] },
      {
        name: 'ToasterOverrides',
        lineStart: 85,
        children: [
          { name: 'Root', lineStart: 86 },
          { name: 'ToastBody', lineStart: 87 },
          { name: 'ToastCloseIcon', lineStart: 88 },
          { name: 'ToastInnerContainer', lineStart: 89 },
        ],
      },
      {
        name: 'ToasterProps',
        lineStart: 92,
        children: [
          { name: 'autoFocus', lineStart: 98 },
          { name: 'autoHideDuration', lineStart: 101 },
          { name: 'children', lineStart: 102 },
          { name: 'closeable', lineStart: 104 },
          { name: 'overrides', lineStart: 105 },
          { name: 'placement', lineStart: 106 },
          { name: 'resetAutoHideTimerOnUpdate', lineStart: 108 },
          { name: 'usePortal', lineStart: 109 },
        ],
      },
      {
        name: 'ToasterContainerState',
        lineStart: 111,
        children: [
          { name: 'isMounted', lineStart: 112 },
          { name: 'toasts', lineStart: 113 },
        ],
      },
    ],
  },
  {
    file: 'src/tokens/types.ts',
    definitions: [
      {
        name: 'ColorTokens',
        lineStart: 7,
        children: [
          { name: 'white', lineStart: 8 },
          { name: 'black', lineStart: 9 },
          { name: 'gray50', lineStart: 10 },
          { name: 'gray100', lineStart: 11 },
          { name: 'gray200', lineStart: 12 },
          { name: 'gray300', lineStart: 13 },
          { name: 'gray400', lineStart: 14 },
          { name: 'gray500', lineStart: 15 },
          { name: 'gray600', lineStart: 16 },
          { name: 'gray700', lineStart: 17 },
          { name: 'gray800', lineStart: 18 },
          { name: 'gray900', lineStart: 19 },
          { name: 'platinum50', lineStart: 20 },
          { name: 'platinum100', lineStart: 21 },
          { name: 'platinum200', lineStart: 22 },
          { name: 'platinum300', lineStart: 23 },
          { name: 'platinum400', lineStart: 24 },
          { name: 'platinum500', lineStart: 25 },
          { name: 'platinum600', lineStart: 26 },
          { name: 'platinum700', lineStart: 27 },
          { name: 'platinum800', lineStart: 28 },
          { name: 'blue50', lineStart: 29 },
          { name: 'blue100', lineStart: 30 },
          { name: 'blue200', lineStart: 31 },
          { name: 'blue300', lineStart: 32 },
          { name: 'blue400', lineStart: 33 },
          { name: 'blue500', lineStart: 34 },
          { name: 'blue600', lineStart: 35 },
          { name: 'blue700', lineStart: 36 },
          { name: 'teal50', lineStart: 37 },
          { name: 'teal100', lineStart: 38 },
          { name: 'teal200', lineStart: 39 },
          { name: 'teal300', lineStart: 40 },
          { name: 'teal400', lineStart: 41 },
          { name: 'teal500', lineStart: 42 },
          { name: 'teal600', lineStart: 43 },
          { name: 'teal700', lineStart: 44 },
          { name: 'red50', lineStart: 45 },
          { name: 'red100', lineStart: 46 },
          { name: 'red200', lineStart: 47 },
          { name: 'red300', lineStart: 48 },
          { name: 'red400', lineStart: 49 },
          { name: 'red500', lineStart: 50 },
          { name: 'red600', lineStart: 51 },
          { name: 'red700', lineStart: 52 },
          { name: 'green50', lineStart: 53 },
          { name: 'green100', lineStart: 54 },
          { name: 'green200', lineStart: 55 },
          { name: 'green300', lineStart: 56 },
          { name: 'green400', lineStart: 57 },
          { name: 'green500', lineStart: 58 },
          { name: 'green600', lineStart: 59 },
          { name: 'green700', lineStart: 60 },
          { name: 'orange50', lineStart: 61 },
          { name: 'orange100', lineStart: 62 },
          { name: 'orange200', lineStart: 63 },
          { name: 'orange300', lineStart: 64 },
          { name: 'orange400', lineStart: 65 },
          { name: 'orange500', lineStart: 66 },
          { name: 'orange600', lineStart: 67 },
          { name: 'orange700', lineStart: 68 },
          { name: 'magenta50', lineStart: 69 },
          { name: 'magenta100', lineStart: 70 },
          { name: 'magenta200', lineStart: 71 },
          { name: 'magenta300', lineStart: 72 },
          { name: 'magenta400', lineStart: 73 },
          { name: 'magenta500', lineStart: 74 },
          { name: 'magenta600', lineStart: 75 },
          { name: 'magenta700', lineStart: 76 },
          { name: 'purple50', lineStart: 77 },
          { name: 'purple100', lineStart: 78 },
          { name: 'purple200', lineStart: 79 },
          { name: 'purple300', lineStart: 80 },
          { name: 'purple400', lineStart: 81 },
          { name: 'purple500', lineStart: 82 },
          { name: 'purple600', lineStart: 83 },
          { name: 'purple700', lineStart: 84 },
          { name: 'yellow50', lineStart: 85 },
          { name: 'yellow100', lineStart: 86 },
          { name: 'yellow200', lineStart: 87 },
          { name: 'yellow300', lineStart: 88 },
          { name: 'yellow400', lineStart: 89 },
          { name: 'yellow500', lineStart: 90 },
          { name: 'yellow600', lineStart: 91 },
          { name: 'yellow700', lineStart: 92 },
          { name: 'lime50', lineStart: 93 },
          { name: 'lime100', lineStart: 94 },
          { name: 'lime200', lineStart: 95 },
          { name: 'lime300', lineStart: 96 },
          { name: 'lime400', lineStart: 97 },
          { name: 'lime500', lineStart: 98 },
          { name: 'lime600', lineStart: 99 },
          { name: 'lime700', lineStart: 100 },
          { name: 'brown50', lineStart: 101 },
          { name: 'brown100', lineStart: 102 },
          { name: 'brown200', lineStart: 103 },
          { name: 'brown300', lineStart: 104 },
          { name: 'brown400', lineStart: 105 },
          { name: 'brown500', lineStart: 106 },
          { name: 'brown600', lineStart: 107 },
          { name: 'brown700', lineStart: 108 },
          { name: 'cobalt50', lineStart: 109 },
          { name: 'cobalt100', lineStart: 110 },
          { name: 'cobalt200', lineStart: 111 },
          { name: 'cobalt300', lineStart: 112 },
          { name: 'cobalt400', lineStart: 113 },
          { name: 'cobalt500', lineStart: 114 },
          { name: 'cobalt600', lineStart: 115 },
          { name: 'cobalt700', lineStart: 116 },
        ],
      },
    ],
  },
  { file: 'src/tooltip/types.ts', definitions: [] },
  {
    file: 'src/tree-view/types.ts',
    definitions: [
      {
        name: 'TreeLabelOverrides',
        lineStart: 10,
        children: [
          { name: 'TreeItemContent', lineStart: 11 },
          { name: 'IconContainer', lineStart: 12 },
          { name: 'ExpandIcon', lineStart: 13 },
          { name: 'CollapseIcon', lineStart: 14 },
          { name: 'LeafIconContainer', lineStart: 15 },
          { name: 'LeafIcon', lineStart: 16 },
        ],
      },
      { name: 'TreeViewOverrides', lineStart: 19, children: [] },
      { name: 'TreeNodeId', lineStart: 26, children: [] },
      {
        name: 'TreeNodeData',
        lineStart: 29,
        children: [
          { name: 'id', lineStart: 30 },
          { name: 'children', lineStart: 31 },
          { name: 'isExpanded', lineStart: 32 },
          { name: 'label', lineStart: 33 },
          { name: 'info', lineStart: 34 },
          { name: 'index', lineStart: 36 },
        ],
      },
      {
        name: 'TreeLabelProps',
        lineStart: 39,
        children: [
          { name: 'hasChildren', lineStart: 40 },
          { name: 'isExpanded', lineStart: 41 },
          { name: 'isSelected', lineStart: 42 },
          { name: 'isFocusVisible', lineStart: 43 },
          { name: 'label', lineStart: 44 },
          { name: 'overrides', lineStart: 45 },
          { name: 'node', lineStart: 46 },
        ],
      },
      {
        name: 'SharedStyleProps',
        lineStart: 49,
        children: [
          { name: '$hasChildren', lineStart: 50 },
          { name: '$isExpanded', lineStart: 51 },
          { name: '$isSelected', lineStart: 52 },
          { name: '$isFocusVisible', lineStart: 53 },
        ],
      },
      {
        name: 'TreeNodeProps',
        lineStart: 56,
        children: [
          { name: 'node', lineStart: 57 },
          { name: 'getId', lineStart: 58 },
          { name: 'onToggle', lineStart: 59 },
          { name: 'overrides', lineStart: 60 },
          { name: 'renderAll', lineStart: 61 },
          { name: 'onKeyDown', lineStart: 62 },
          { name: 'onFocus', lineStart: 63 },
          { name: 'onBlur', lineStart: 64 },
          { name: 'selectedNodeId', lineStart: 65 },
          { name: 'addRef', lineStart: 66 },
          { name: 'removeRef', lineStart: 67 },
          { name: 'isFocusVisible', lineStart: 68 },
          { name: 'indentGuides', lineStart: 69 },
        ],
      },
      { name: 'StatefulContainerProps', lineStart: 72, children: [] },
      {
        name: 'TreeViewProps',
        lineStart: 76,
        children: [
          { name: 'data', lineStart: 77 },
          { name: 'indentGuides', lineStart: 78 },
          { name: 'onToggle', lineStart: 79 },
          { name: 'overrides', lineStart: 80 },
          { name: 'renderAll', lineStart: 81 },
          { name: 'getId', lineStart: 82 },
          { name: 'singleExpanded', lineStart: 85 },
        ],
      },
    ],
  },
  {
    file: 'src/datepicker/utils/types.ts',
    definitions: [
      { name: 'DateInput', lineStart: 9, children: [] },
      {
        name: 'AdapterOptions',
        lineStart: 15,
        children: [
          { name: 'locale', lineStart: 16 },
          { name: 'formats', lineStart: 17 },
          { name: 'instance', lineStart: 20 },
        ],
      },
      {
        name: 'DateIOAdapter',
        lineStart: 23,
        children: [
          { name: 'locale', lineStart: 24 },
          { name: 'formats', lineStart: 25 },
          { name: 'date', lineStart: 28 },
          { name: 'toJsDate', lineStart: 29 },
          { name: 'parse', lineStart: 30 },
          { name: 'getCurrentLocaleCode', lineStart: 31 },
          { name: 'is12HourCycleInCurrentLocale', lineStart: 32 },
          { name: 'isNull', lineStart: 33 },
          { name: 'isValid', lineStart: 34 },
          { name: 'getDiff', lineStart: 35 },
          { name: 'isEqual', lineStart: 36 },
          { name: 'isSameDay', lineStart: 37 },
          { name: 'isSameMonth', lineStart: 38 },
          { name: 'isSameYear', lineStart: 39 },
          { name: 'isSameHour', lineStart: 40 },
          { name: 'isAfter', lineStart: 41 },
          { name: 'isAfterDay', lineStart: 42 },
          { name: 'isAfterYear', lineStart: 43 },
          { name: 'isBeforeDay', lineStart: 44 },
          { name: 'isBeforeYear', lineStart: 45 },
          { name: 'isBefore', lineStart: 46 },
          { name: 'startOfMonth', lineStart: 47 },
          { name: 'endOfMonth', lineStart: 48 },
          { name: 'startOfWeek', lineStart: 49 },
          { name: 'endOfWeek', lineStart: 50 },
          { name: 'addDays', lineStart: 51 },
          { name: 'addMonths', lineStart: 52 },
          { name: 'isWithinRange', lineStart: 53 },
          { name: 'startOfDay', lineStart: 54 },
          { name: 'endOfDay', lineStart: 55 },
          { name: 'format', lineStart: 56 },
          { name: 'formatByString', lineStart: 57 },
          { name: 'formatNumber', lineStart: 58 },
          { name: 'getHours', lineStart: 59 },
          { name: 'setHours', lineStart: 60 },
          { name: 'getMinutes', lineStart: 61 },
          { name: 'setMinutes', lineStart: 62 },
          { name: 'getSeconds', lineStart: 63 },
          { name: 'setSeconds', lineStart: 64 },
          { name: 'getMonth', lineStart: 65 },
          { name: 'setMonth', lineStart: 66 },
          { name: 'getNextMonth', lineStart: 67 },
          { name: 'getPreviousMonth', lineStart: 68 },
          { name: 'getMonthArray', lineStart: 69 },
          { name: 'getYear', lineStart: 70 },
          { name: 'setYear', lineStart: 71 },
          { name: 'mergeDateAndTime', lineStart: 72 },
          { name: 'getWeekdays', lineStart: 73 },
          { name: 'getWeekArray', lineStart: 74 },
          { name: 'getYearRange', lineStart: 75 },
          { name: 'getMeridiemText', lineStart: 77 },
        ],
      },
    ],
  },
];
export default outlines;
